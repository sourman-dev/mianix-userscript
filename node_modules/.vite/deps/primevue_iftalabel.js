import {
  script
} from "./chunk-DNSAVN32.js";
import "./chunk-ZFZY5IRC.js";
import {
  BaseStyle
} from "./chunk-YDMYDCGA.js";
import "./chunk-BWCOGC27.js";
import {
  createElementBlock,
  mergeProps,
  openBlock,
  renderSlot
} from "./chunk-MTU4XKSZ.js";
import "./chunk-ILHRZGIS.js";

// node_modules/.pnpm/@primeuix+styles@1.1.2/node_modules/@primeuix/styles/iftalabel/index.mjs
var style = "\n    .p-iftalabel {\n        display: block;\n        position: relative;\n    }\n\n    .p-iftalabel label {\n        position: absolute;\n        pointer-events: none;\n        top: dt('iftalabel.top');\n        transition-property: all;\n        transition-timing-function: ease;\n        line-height: 1;\n        font-size: dt('iftalabel.font.size');\n        font-weight: dt('iftalabel.font.weight');\n        inset-inline-start: dt('iftalabel.position.x');\n        color: dt('iftalabel.color');\n        transition-duration: dt('iftalabel.transition.duration');\n    }\n\n    .p-iftalabel .p-inputtext,\n    .p-iftalabel .p-textarea,\n    .p-iftalabel .p-select-label,\n    .p-iftalabel .p-multiselect-label,\n    .p-iftalabel .p-autocomplete-input-multiple,\n    .p-iftalabel .p-cascadeselect-label,\n    .p-iftalabel .p-treeselect-label {\n        padding-block-start: dt('iftalabel.input.padding.top');\n        padding-block-end: dt('iftalabel.input.padding.bottom');\n    }\n\n    .p-iftalabel:has(.p-invalid) label {\n        color: dt('iftalabel.invalid.color');\n    }\n\n    .p-iftalabel:has(input:focus) label,\n    .p-iftalabel:has(input:-webkit-autofill) label,\n    .p-iftalabel:has(textarea:focus) label,\n    .p-iftalabel:has(.p-inputwrapper-focus) label {\n        color: dt('iftalabel.focus.color');\n    }\n\n    .p-iftalabel .p-inputicon {\n        top: dt('iftalabel.input.padding.top');\n        transform: translateY(25%);\n        margin-top: 0;\n    }\n";

// node_modules/.pnpm/primevue@4.3.5_vue@3.5.17_typescript@5.8.3_/node_modules/primevue/iftalabel/style/index.mjs
var classes = {
  root: "p-iftalabel"
};
var IftaLabelStyle = BaseStyle.extend({
  name: "iftalabel",
  style,
  classes
});

// node_modules/.pnpm/primevue@4.3.5_vue@3.5.17_typescript@5.8.3_/node_modules/primevue/iftalabel/index.mjs
var script$1 = {
  name: "BaseIftaLabel",
  "extends": script,
  style: IftaLabelStyle,
  provide: function provide() {
    return {
      $pcIftaLabel: this,
      $parentInstance: this
    };
  }
};
var script2 = {
  name: "IftaLabel",
  "extends": script$1,
  inheritAttrs: false
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("span", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
script2.render = render;
export {
  script2 as default
};
//# sourceMappingURL=primevue_iftalabel.js.map

{
  "version": 3,
  "sources": ["../../.pnpm/fast-sort@3.4.1/node_modules/fast-sort/dist/sort.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index24.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index15.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index25.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index16.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index10.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index26.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index17.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index2.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index13.mjs", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/util.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/core.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/boolean/index.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/boolean/and.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/boolean/not.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/boolean/or.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/index.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/cmp.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/lazy.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/pipeline/limit.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/pipeline/project.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/pipeline/skip.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/pipeline/sort.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/cursor.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/query.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/_predicates.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/eq.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/gt.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/gte.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/lt.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/lte.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/comparison/ne.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/expression/array/slice.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/projection/index.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/projection/elemMatch.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/projection/slice.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/index.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/array/all.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/array/elemMatch.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/array/size.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/bitwise/_internal.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/bitwise/bitsAllClear.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/bitwise/bitsAllSet.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/bitwise/bitsAnyClear.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/bitwise/bitsAnySet.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/eq.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/gt.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/gte.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/in.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/lt.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/lte.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/ne.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/comparison/nin.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/element/exists.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/element/type.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/evaluation/expr.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/evaluation/jsonSchema.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/evaluation/mod.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/evaluation/regex.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/evaluation/where.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/logical/and.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/logical/or.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/logical/nor.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/query/logical/not.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/init/basic.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/index.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/_internal.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/addToSet.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/bit.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/currentDate.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/inc.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/max.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/min.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/mul.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/pop.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/pull.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/pullAll.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/push.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/set.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/rename.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/operators/update/unset.js", "../../.pnpm/mingo@6.6.1/node_modules/mingo/dist/esm/updater.js", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index18.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index19.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index11.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index12.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index20.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index21.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index27.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index22.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index6.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index29.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index28.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index14.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index3.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index8.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index5.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index23.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index4.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index7.mjs", "../../.pnpm/@signaldb+core@1.6.0/node_modules/@signaldb/core/dist/index9.mjs"],
  "sourcesContent": ["// >>> INTERFACES <<<\r\n// >>> HELPERS <<<\r\nvar castComparer = function (comparer) { return function (a, b, order) { return comparer(a, b, order) * order; }; };\r\nvar throwInvalidConfigErrorIfTrue = function (condition, context) {\r\n    if (condition)\r\n        throw Error(\"Invalid sort config: \" + context);\r\n};\r\nvar unpackObjectSorter = function (sortByObj) {\r\n    var _a = sortByObj || {}, asc = _a.asc, desc = _a.desc;\r\n    var order = asc ? 1 : -1;\r\n    var sortBy = (asc || desc);\r\n    // Validate object config\r\n    throwInvalidConfigErrorIfTrue(!sortBy, 'Expected `asc` or `desc` property');\r\n    throwInvalidConfigErrorIfTrue(asc && desc, 'Ambiguous object with `asc` and `desc` config properties');\r\n    var comparer = sortByObj.comparer && castComparer(sortByObj.comparer);\r\n    return { order: order, sortBy: sortBy, comparer: comparer };\r\n};\r\n// >>> SORTERS <<<\r\nvar multiPropertySorterProvider = function (defaultComparer) {\r\n    return function multiPropertySorter(sortBy, sortByArr, depth, order, comparer, a, b) {\r\n        var valA;\r\n        var valB;\r\n        if (typeof sortBy === 'string') {\r\n            valA = a[sortBy];\r\n            valB = b[sortBy];\r\n        }\r\n        else if (typeof sortBy === 'function') {\r\n            valA = sortBy(a);\r\n            valB = sortBy(b);\r\n        }\r\n        else {\r\n            var objectSorterConfig = unpackObjectSorter(sortBy);\r\n            return multiPropertySorter(objectSorterConfig.sortBy, sortByArr, depth, objectSorterConfig.order, objectSorterConfig.comparer || defaultComparer, a, b);\r\n        }\r\n        var equality = comparer(valA, valB, order);\r\n        if ((equality === 0 || (valA == null && valB == null)) &&\r\n            sortByArr.length > depth) {\r\n            return multiPropertySorter(sortByArr[depth], sortByArr, depth + 1, order, comparer, a, b);\r\n        }\r\n        return equality;\r\n    };\r\n};\r\nfunction getSortStrategy(sortBy, comparer, order) {\r\n    // Flat array sorter\r\n    if (sortBy === undefined || sortBy === true) {\r\n        return function (a, b) { return comparer(a, b, order); };\r\n    }\r\n    // Sort list of objects by single object key\r\n    if (typeof sortBy === 'string') {\r\n        throwInvalidConfigErrorIfTrue(sortBy.includes('.'), 'String syntax not allowed for nested properties.');\r\n        return function (a, b) { return comparer(a[sortBy], b[sortBy], order); };\r\n    }\r\n    // Sort list of objects by single function sorter\r\n    if (typeof sortBy === 'function') {\r\n        return function (a, b) { return comparer(sortBy(a), sortBy(b), order); };\r\n    }\r\n    // Sort by multiple properties\r\n    if (Array.isArray(sortBy)) {\r\n        var multiPropSorter_1 = multiPropertySorterProvider(comparer);\r\n        return function (a, b) { return multiPropSorter_1(sortBy[0], sortBy, 1, order, comparer, a, b); };\r\n    }\r\n    // Unpack object config to get actual sorter strategy\r\n    var objectSorterConfig = unpackObjectSorter(sortBy);\r\n    return getSortStrategy(objectSorterConfig.sortBy, objectSorterConfig.comparer || comparer, objectSorterConfig.order);\r\n}\r\nvar sortArray = function (order, ctx, sortBy, comparer) {\r\n    var _a;\r\n    if (!Array.isArray(ctx)) {\r\n        return ctx;\r\n    }\r\n    // Unwrap sortBy if array with only 1 value to get faster sort strategy\r\n    if (Array.isArray(sortBy) && sortBy.length < 2) {\r\n        _a = sortBy, sortBy = _a[0];\r\n    }\r\n    return ctx.sort(getSortStrategy(sortBy, comparer, order));\r\n};\r\nfunction createNewSortInstance(opts) {\r\n    var comparer = castComparer(opts.comparer);\r\n    return function (arrayToSort) {\r\n        var ctx = Array.isArray(arrayToSort) && !opts.inPlaceSorting\r\n            ? arrayToSort.slice()\r\n            : arrayToSort;\r\n        return {\r\n            asc: function (sortBy) {\r\n                return sortArray(1, ctx, sortBy, comparer);\r\n            },\r\n            desc: function (sortBy) {\r\n                return sortArray(-1, ctx, sortBy, comparer);\r\n            },\r\n            by: function (sortBy) {\r\n                return sortArray(1, ctx, sortBy, comparer);\r\n            },\r\n        };\r\n    };\r\n}\r\nvar defaultComparer = function (a, b, order) {\r\n    if (a == null)\r\n        return order;\r\n    if (b == null)\r\n        return -order;\r\n    if (typeof a !== typeof b) {\r\n        return typeof a < typeof b ? -1 : 1;\r\n    }\r\n    if (a < b)\r\n        return -1;\r\n    if (a > b)\r\n        return 1;\r\n    return 0;\r\n};\r\nvar sort = createNewSortInstance({\r\n    comparer: defaultComparer,\r\n});\r\nvar inPlaceSort = createNewSortInstance({\r\n    comparer: defaultComparer,\r\n    inPlaceSorting: true,\r\n});\n\nexport { createNewSortInstance, defaultComparer, inPlaceSort, sort };\n", "function get(value, path) {\n  const segments = path.split(/[.[\\]]/g);\n  if (segments[0] === \"\")\n    segments.shift();\n  if (segments.at(-1) === \"\")\n    segments.pop();\n  let current = value;\n  for (const key of segments) {\n    if (current == null || key.trim() === \"\")\n      return;\n    current = current[key];\n  }\n  if (current === void 0)\n    return;\n  return current;\n}\nexport {\n  get as default\n};\n", "import { sort } from \"fast-sort\";\nimport get from \"./index24.mjs\";\nfunction sortItems(items, sortFields) {\n  return sort(items).by(Object.entries(sortFields).map(([key, value]) => {\n    const order = value === 1 ? \"asc\" : \"desc\";\n    return { [order]: (i) => get(i, key) };\n  }));\n}\nexport {\n  sortItems as default\n};\n", "function set(object, path, value, deleteIfUndefined = false) {\n  if (object == null)\n    return object;\n  const segments = path.split(/[.[\\]]/g);\n  if (segments[0] === \"\")\n    segments.shift();\n  if (segments.at(-1) === \"\")\n    segments.pop();\n  const apply = (node) => {\n    if (segments.length > 1) {\n      const key = segments.shift();\n      const nextIsNumber = !Number.isNaN(Number.parseInt(segments[0], 10));\n      if (node[key] === void 0) {\n        node[key] = nextIsNumber ? [] : {};\n      }\n      apply(node[key]);\n    } else {\n      if (deleteIfUndefined && value === void 0) {\n        delete node[segments[0]];\n        return;\n      }\n      node[segments[0]] = value;\n    }\n  };\n  apply(object);\n  return object;\n}\nexport {\n  set as default\n};\n", "import get from \"./index24.mjs\";\nimport set from \"./index25.mjs\";\nfunction project(item, fields) {\n  const allFieldsDeactivated = Object.values(fields).every((value) => value === 0);\n  if (allFieldsDeactivated) {\n    const result2 = { ...item };\n    Object.keys(fields).forEach((key) => {\n      const fieldValue = get(item, key);\n      if (fieldValue === void 0)\n        return;\n      set(result2, key, void 0, true);\n    });\n    return result2;\n  }\n  const result = {};\n  Object.entries(fields).forEach(([key, value]) => {\n    const fieldValue = get(item, key);\n    if (fieldValue === void 0)\n      return;\n    if (fieldValue == null && value !== 1)\n      return;\n    set(result, key, value === 1 ? fieldValue : void 0);\n  });\n  return result;\n}\nexport {\n  project as default\n};\n", "function isEqual(a, b) {\n  if (Object.is(a, b))\n    return true;\n  if (a instanceof RegExp && b instanceof RegExp)\n    return a.toString() === b.toString();\n  if (a instanceof Date && b instanceof Date)\n    return a.getTime() === b.getTime();\n  if (typeof a !== \"object\")\n    return false;\n  if (typeof b !== \"object\")\n    return false;\n  if (a === null)\n    return false;\n  if (b === null)\n    return false;\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length)\n    return false;\n  for (const key of aKeys) {\n    if (!bKeys.includes(key))\n      return false;\n    if (!isEqual(a[key], b[key]))\n      return false;\n  }\n  return true;\n}\nexport {\n  isEqual as default\n};\n", "function uniqueBy(array, fn) {\n  const set = /* @__PURE__ */ new Set();\n  return array.filter((element) => {\n    const value = typeof fn === \"function\" ? fn(element) : element[fn];\n    return !set.has(value) && set.add(value);\n  });\n}\nexport {\n  uniqueBy as default\n};\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nimport isEqual from \"./index10.mjs\";\nimport uniqueBy from \"./index26.mjs\";\nclass Observer {\n  /**\n   * Creates a new instance of the `Observer` class.\n   * Sets up event bindings and initializes the callbacks for tracking changes in a collection.\n   * @param bindEvents - A function to bind external events to the observer. Must return a cleanup function to unbind those events.\n   */\n  constructor(bindEvents) {\n    __publicField(this, \"previousItems\", []);\n    __publicField(this, \"callbacks\");\n    __publicField(this, \"unbindEvents\");\n    this.callbacks = {\n      added: [],\n      addedBefore: [],\n      changed: [],\n      changedField: [],\n      movedBefore: [],\n      removed: []\n    };\n    this.unbindEvents = bindEvents();\n  }\n  call(event, ...args) {\n    this.callbacks[event].forEach(({ callback, options }) => {\n      if (!options.skipInitial || !options.isInitial) {\n        callback(...args);\n      }\n    });\n  }\n  hasCallbacks(events) {\n    return events.some((event) => this.callbacks[event].length > 0);\n  }\n  /**\n   * Determines if the observer has no active callbacks registered for any events.\n   * @returns A boolean indicating whether the observer is empty (i.e., no callbacks are registered).\n   */\n  isEmpty() {\n    return !this.hasCallbacks([\n      \"added\",\n      \"addedBefore\",\n      \"changed\",\n      \"changedField\",\n      \"movedBefore\",\n      \"removed\"\n    ]);\n  }\n  /**\n   * Compares the previous state of items with the new state and triggers the appropriate callbacks\n   * for events such as added, removed, changed, or moved items.\n   * @param newItems - The new list of items to compare against the previous state.\n   */\n  runChecks(newItems) {\n    const oldItemsMap = new Map(this.previousItems.map((item, index) => [\n      item.id,\n      { item, index, beforeItem: this.previousItems[index + 1] || null }\n    ]));\n    const newItemsMap = new Map(newItems.map((item, index) => [\n      item.id,\n      { item, index, beforeItem: newItems[index + 1] || null }\n    ]));\n    if (this.hasCallbacks([\"changed\", \"changedField\", \"movedBefore\", \"removed\"])) {\n      oldItemsMap.forEach(({ item: oldItem, index, beforeItem: oldBeforeItem }) => {\n        var _a;\n        const newItem = newItemsMap.get(oldItem.id);\n        if (newItem) {\n          if (this.hasCallbacks([\"changed\", \"changedField\"]) && !isEqual(newItem.item, oldItem)) {\n            this.call(\"changed\", newItem.item);\n            if (this.hasCallbacks([\"changedField\"])) {\n              const keys = uniqueBy([\n                ...Object.keys(newItem.item),\n                ...Object.keys(oldItem)\n              ], (value) => value);\n              keys.forEach((key) => {\n                if (isEqual(newItem.item[key], oldItem[key]))\n                  return;\n                this.call(\"changedField\", newItem.item, key, oldItem[key], newItem.item[key]);\n              });\n            }\n          }\n          if (newItem.index !== index && ((_a = newItem.beforeItem) == null ? void 0 : _a.id) !== (oldBeforeItem == null ? void 0 : oldBeforeItem.id)) {\n            this.call(\"movedBefore\", newItem.item, newItem.beforeItem);\n          }\n        } else {\n          this.call(\"removed\", oldItem);\n        }\n      });\n    }\n    if (this.hasCallbacks([\"added\", \"addedBefore\"])) {\n      newItems.forEach((newItem, index) => {\n        const oldItem = oldItemsMap.get(newItem.id);\n        if (oldItem)\n          return;\n        this.call(\"added\", newItem);\n        this.call(\"addedBefore\", newItem, newItems[index + 1] || null);\n      });\n    }\n    this.previousItems = newItems;\n    Object.keys(this.callbacks).forEach((key) => {\n      const event = key;\n      const callbacks = this.callbacks[event];\n      this.callbacks[event] = callbacks.map((callback) => ({\n        ...callback,\n        options: {\n          ...callback.options,\n          isInitial: false\n        }\n      }));\n    });\n  }\n  /**\n   * Stops the observer by unbinding all events and cleaning up resources.\n   */\n  stop() {\n    this.unbindEvents();\n  }\n  /**\n   * Registers callbacks for specific events to observe changes in the collection.\n   * @param callbacks - An object containing the callbacks for various events (e.g., 'added', 'removed').\n   * @param skipInitial - A boolean indicating whether to skip invoking the callbacks for the initial state of the collection.\n   */\n  addCallbacks(callbacks, skipInitial = false) {\n    Object.keys(callbacks).forEach((key) => {\n      const typedKey = key;\n      this.callbacks[typedKey].push({\n        callback: callbacks[typedKey],\n        options: { skipInitial, isInitial: true }\n      });\n    });\n  }\n  /**\n   * Removes the specified callbacks for specific events, unregistering them from the observer.\n   * @param callbacks - An object containing the callbacks to be removed for various events.\n   */\n  removeCallbacks(callbacks) {\n    Object.keys(callbacks).forEach((key) => {\n      const typedKey = key;\n      const index = this.callbacks[typedKey].findIndex(({ callback }) => callback === callbacks[typedKey]);\n      this.callbacks[typedKey].splice(index, 1);\n    });\n  }\n}\nexport {\n  Observer as default\n};\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nimport sortItems from \"./index15.mjs\";\nimport project from \"./index16.mjs\";\nimport Observer from \"./index17.mjs\";\nfunction isInReactiveScope(reactivity) {\n  if (!reactivity)\n    return false;\n  if (!reactivity.isInScope)\n    return true;\n  return reactivity.isInScope();\n}\nclass Cursor {\n  /**\n   * Creates a new instance of the `Cursor` class.\n   * Provides utilities for querying, observing, and transforming items from a collection.\n   * @template T - The type of the items in the collection.\n   * @template U - The transformed item type after applying transformations (default is T).\n   * @param getItems - A function that retrieves the filtered list of items.\n   * @param options - Optional configuration for the cursor.\n   * @param options.transform - A transformation function to apply to each item when retrieving them.\n   * @param options.bindEvents - A function to bind reactivity events for the cursor, which should return a cleanup function.\n   * @param options.fields - A projection object defining which fields of the item should be included or excluded.\n   * @param options.sort - A sort specifier to determine the order of the items.\n   * @param options.skip - The number of items to skip from the beginning of the result set.\n   * @param options.limit - The maximum number of items to return in the result set.\n   * @param options.reactive - A reactivity adapter to enable observing changes in the cursor's result set.\n   * @param options.fieldTracking - A boolean to enable fine-grained field tracking for reactivity.\n   */\n  constructor(getItems, options) {\n    __publicField(this, \"observer\");\n    __publicField(this, \"getFilteredItems\");\n    __publicField(this, \"options\");\n    __publicField(this, \"onCleanupCallbacks\", []);\n    this.getFilteredItems = getItems;\n    this.options = options || {};\n  }\n  addGetters(item) {\n    if (!isInReactiveScope(this.options.reactive))\n      return item;\n    const depend = this.depend.bind(this);\n    return Object.entries(item).reduce((memo, [key, value]) => {\n      Object.defineProperty(memo, key, {\n        get() {\n          depend({\n            changedField: (notify) => (changedItem, changedFieldName) => {\n              if (changedFieldName !== key || changedItem.id !== item.id)\n                return;\n              notify();\n            }\n          });\n          return value;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      return memo;\n    }, {});\n  }\n  transform(rawItem) {\n    const item = this.options.fieldTracking ? this.addGetters(rawItem) : rawItem;\n    if (!this.options.transform)\n      return item;\n    return this.options.transform(item);\n  }\n  getItems() {\n    const items = this.getFilteredItems();\n    const { sort, skip, limit } = this.options;\n    const sorted = sort ? sortItems(items, sort) : items;\n    const skipped = skip ? sorted.slice(skip) : sorted;\n    const limited = limit ? skipped.slice(0, limit) : skipped;\n    const idExcluded = this.options.fields && this.options.fields.id === 0;\n    return limited.map((item) => {\n      if (!this.options.fields)\n        return item;\n      return {\n        ...idExcluded ? {} : { id: item.id },\n        ...project(item, this.options.fields)\n      };\n    });\n  }\n  depend(changeEvents) {\n    if (!this.options.reactive)\n      return;\n    if (!isInReactiveScope(this.options.reactive))\n      return;\n    const signal = this.options.reactive.create();\n    signal.depend();\n    const notify = () => signal.notify();\n    function buildNotifier(event) {\n      const eventHandler = changeEvents[event];\n      return (...args) => {\n        if (eventHandler === true) {\n          notify();\n          return;\n        }\n        if (typeof eventHandler !== \"function\")\n          return;\n        eventHandler(notify)(...args);\n      };\n    }\n    const stop = this.observeRawChanges({\n      added: buildNotifier(\"added\"),\n      addedBefore: buildNotifier(\"addedBefore\"),\n      changed: buildNotifier(\"changed\"),\n      changedField: buildNotifier(\"changedField\"),\n      movedBefore: buildNotifier(\"movedBefore\"),\n      removed: buildNotifier(\"removed\")\n    }, true);\n    if (this.options.reactive.onDispose) {\n      this.options.reactive.onDispose(() => stop(), signal);\n    }\n    this.onCleanup(stop);\n  }\n  ensureObserver() {\n    if (!this.observer) {\n      const observer = new Observer(() => {\n        const requery = () => {\n          observer.runChecks(this.getItems());\n        };\n        const cleanup = this.options.bindEvents && this.options.bindEvents(requery);\n        return () => {\n          if (cleanup)\n            cleanup();\n        };\n      });\n      this.onCleanup(() => observer.stop());\n      this.observer = observer;\n    }\n    return this.observer;\n  }\n  observeRawChanges(callbacks, skipInitial = false) {\n    const observer = this.ensureObserver();\n    observer.addCallbacks(callbacks, skipInitial);\n    observer.runChecks(this.getItems());\n    return () => {\n      observer.removeCallbacks(callbacks);\n      if (!observer.isEmpty())\n        return;\n      observer.stop();\n      this.observer = void 0;\n    };\n  }\n  /**\n   * Cleans up all resources associated with the cursor, such as reactive bindings\n   * and event listeners. This method should be called when the cursor is no longer needed\n   * to prevent memory leaks.\n   */\n  cleanup() {\n    this.onCleanupCallbacks.forEach((callback) => {\n      callback();\n    });\n    this.onCleanupCallbacks = [];\n  }\n  /**\n   * Registers a cleanup callback to be executed when the `cleanup` method is called.\n   * Useful for managing resources and ensuring proper cleanup of bindings or listeners.\n   * @param callback - A function to be executed during cleanup.\n   */\n  onCleanup(callback) {\n    this.onCleanupCallbacks.push(callback);\n  }\n  /**\n   * Iterates over each item in the cursor's result set, applying the provided callback\n   * function to each transformed item.\n   * ⚡️ this function is reactive!\n   * @param callback - A function to execute for each item in the result set.\n   * @param callback.item - The transformed item.\n   */\n  forEach(callback) {\n    const items = this.getItems();\n    this.depend({\n      addedBefore: true,\n      removed: true,\n      movedBefore: true,\n      ...this.options.fieldTracking ? {} : { changed: true }\n    });\n    items.forEach((item) => {\n      callback(this.transform(item));\n    });\n  }\n  /**\n   * Creates a new array populated with the results of applying the provided callback\n   * function to each transformed item in the cursor's result set.\n   * ⚡️ this function is reactive!\n   * @template V - The type of the items in the resulting array.\n   * @param callback - A function to execute for each item in the result set.\n   * @param callback.item - The transformed item.\n   * @returns An array of results after applying the callback to each item.\n   */\n  map(callback) {\n    const results = [];\n    this.forEach((item) => {\n      results.push(callback(item));\n    });\n    return results;\n  }\n  /**\n   * Fetches all transformed items from the cursor's result set as an array.\n   * Automatically applies filtering, sorting, and limiting as per the cursor's options.\n   * ⚡️ this function is reactive!\n   * @returns An array of transformed items in the result set.\n   */\n  fetch() {\n    return this.map((item) => item);\n  }\n  /**\n   * Counts the total number of items in the cursor's result set after applying\n   * filtering and other criteria.\n   * ⚡️ this function is reactive!\n   * @returns The total number of items in the result set.\n   */\n  count() {\n    const items = this.getItems();\n    this.depend({\n      added: true,\n      removed: true\n    });\n    return items.length;\n  }\n  /**\n   * Observes changes to the cursor's result set and triggers the specified callbacks\n   * when items are added, removed, or updated. Supports reactivity and transformation.\n   * @param callbacks - An object containing the callback functions to handle different change events.\n   * @param callbacks.added - Triggered when an item is added to the result set.\n   * @param callbacks.removed - Triggered when an item is removed from the result set.\n   * @param callbacks.changed - Triggered when an item in the result set is modified.\n   * @param callbacks.addedBefore - Triggered when an item is added before another item in the result set.\n   * @param callbacks.movedBefore - Triggered when an item is moved before another item in the result set.\n   * @param callbacks.changedField - Triggered when a specific field of an item changes.\n   * @param skipInitial - A boolean indicating whether to skip the initial notification of the current result set.\n   * @returns A function to stop observing changes.\n   */\n  observeChanges(callbacks, skipInitial = false) {\n    return this.observeRawChanges(Object.entries(callbacks).reduce((memo, [callbackName, callback]) => {\n      if (!callback)\n        return memo;\n      return {\n        ...memo,\n        [callbackName]: (item, before) => {\n          const transformedValue = this.transform(item);\n          const hasBeforeParameter = before !== void 0;\n          const transformedBeforeValue = hasBeforeParameter && before ? this.transform(before) : null;\n          return callback(transformedValue, ...hasBeforeParameter ? [transformedBeforeValue] : []);\n        }\n      };\n    }, {}), skipInitial);\n  }\n  /**\n   * Forces the cursor to re-evaluate its result set by re-fetching items\n   * from the collection. This is useful when the underlying data or query\n   * criteria have changed, and you want to ensure the cursor reflects the latest state.\n   */\n  requery() {\n    if (!this.observer)\n      return;\n    this.observer.runChecks(this.getItems());\n  }\n}\nexport {\n  Cursor as default,\n  isInReactiveScope\n};\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass EventEmitter {\n  constructor() {\n    __publicField(this, \"_maxListeners\", 100);\n    /**\n     * We store a set of the listeners for each event.\n     */\n    __publicField(this, \"_listenerStore\", /* @__PURE__ */ new Map());\n  }\n  setMaxListeners(max) {\n    this._maxListeners = max;\n    return this;\n  }\n  /**\n   * Subscribe to an event with a listener function.\n   * @param eventName The event name (key of E).\n   * @param listener  A function that receives the emitted arguments.\n   * @returns         The emitter instance (for chaining).\n   */\n  on(eventName, listener) {\n    let listenersSet = this._listenerStore.get(eventName);\n    if (!listenersSet) {\n      listenersSet = /* @__PURE__ */ new Set();\n      this._listenerStore.set(eventName, listenersSet);\n    }\n    listenersSet.add(listener);\n    if (listenersSet.size > this._maxListeners) {\n      console.warn(`Possible EventEmitter memory leak detected. ${listenersSet.size} ${String(eventName)} listeners added. Use emitter.setMaxListeners() to increase limit.`);\n    }\n    return this;\n  }\n  /**\n   * Subscribe to an event with a listener function.\n   * @param eventName The event name (key of E).\n   * @param listener  A function that receives the emitted arguments.\n   * @returns         The emitter instance (for chaining).\n   */\n  addListener(eventName, listener) {\n    return this.on(eventName, listener);\n  }\n  /**\n   * Subscribe to an event, handling it only once. Automatically removes\n   * the listener after it fires the first time.\n   * @param eventName The event name (key of E).\n   * @param listener  A function that receives the emitted arguments.\n   * @returns         The emitter instance (for chaining).\n   */\n  once(eventName, listener) {\n    const onceWrapper = (...args) => {\n      listener(...args);\n      this.off(eventName, onceWrapper);\n    };\n    return this.on(eventName, onceWrapper);\n  }\n  /**\n   * Unsubscribe a previously subscribed listener.\n   * @param eventName The event name (key of E).\n   * @param listener  The original function passed to `on` or `once`.\n   * @returns         The emitter instance (for chaining).\n   */\n  off(eventName, listener) {\n    const listenersSet = this._listenerStore.get(eventName);\n    if (!listenersSet)\n      return this;\n    listenersSet.delete(listener);\n    if (listenersSet.size === 0) {\n      this._listenerStore.delete(eventName);\n    }\n    return this;\n  }\n  /**\n   * Unsubscribe a previously subscribed listener.\n   * @param eventName The event name (key of E).\n   * @param listener  The original function passed to `on` or `once`.\n   * @returns         The emitter instance (for chaining).\n   */\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n  /**\n   * Emit (dispatch) an event with a variable number of arguments.\n   * @param eventName The event name (key of E).\n   * @param args      The arguments to pass to subscribed listeners.\n   */\n  emit(eventName, ...args) {\n    this.listeners(eventName).forEach((listener) => {\n      listener(...args);\n    });\n  }\n  /**\n   * Returns the array of listener functions currently registered for a given event.\n   * @param eventName The event name (key of E).\n   * @returns         An array of listener functions.\n   */\n  listeners(eventName) {\n    const listenersSet = this._listenerStore.get(eventName);\n    if (!listenersSet)\n      return [];\n    return [...listenersSet.values()];\n  }\n  /**\n   * Returns the number of listeners for a given event.\n   * @param eventName The event name (key of E).\n   * @returns         The number of listeners.\n   */\n  listenerCount(eventName) {\n    const listenersSet = this._listenerStore.get(eventName);\n    return listenersSet ? listenersSet.size : 0;\n  }\n  /**\n   * Removes all listeners for a given event, or all events if none is specified.\n   * @param eventName Optional. If omitted, clears all events’ listeners.\n   * @returns         The emitter instance (for chaining).\n   */\n  removeAllListeners(eventName) {\n    if (eventName === void 0) {\n      for (const [eventName_, listenersSet] of this._listenerStore.entries()) {\n        for (const listener of listenersSet.values()) {\n          this.off(eventName_, listener);\n        }\n      }\n      this._listenerStore.clear();\n    } else {\n      const listenersSet = this._listenerStore.get(eventName);\n      if (listenersSet) {\n        for (const listener of listenersSet.values()) {\n          this.off(eventName, listener);\n        }\n        this._listenerStore.delete(eventName);\n      }\n    }\n    return this;\n  }\n}\nexport {\n  EventEmitter as default\n};\n", "class MingoError extends Error {\n}\nconst MISSING = Symbol(\"missing\");\nconst ERR_CYCLE_FOUND = \"mingo: cycle detected while processing object/array\";\nconst DEFAULT_HASH_FUNCTION = (value) => {\n  const s = stringify(value);\n  let hash = 0;\n  let i = s.length;\n  while (i) hash = (hash << 5) - hash ^ s.charCodeAt(--i);\n  return hash >>> 0;\n};\nconst isPrimitive = (v) => typeof v !== \"object\" && typeof v !== \"function\" || v === null;\nconst isScalar = (v) => isPrimitive(v) || isDate(v) || isRegExp(v);\nconst SORT_ORDER = {\n  undefined: 1,\n  null: 2,\n  number: 3,\n  string: 4,\n  symbol: 5,\n  object: 6,\n  array: 7,\n  arraybuffer: 8,\n  boolean: 9,\n  date: 10,\n  regexp: 11,\n  function: 12\n};\nfunction compare(a, b) {\n  if (a === MISSING) a = void 0;\n  if (b === MISSING) b = void 0;\n  const customOrder = 100;\n  const [u, v] = [a, b].map(\n    (n) => SORT_ORDER[isTypedArray(n) ? \"arraybuffer\" : typeOf(n)] ?? customOrder\n    /*custom objects have highest sort order*/\n  );\n  if (u !== v) return u - v;\n  if (u === customOrder) {\n    a = stringify(a);\n    b = stringify(b);\n  }\n  return isEqual(a, b) ? 0 : a < b ? -1 : 1;\n}\nclass ValueMap extends Map {\n  // The hash function\n  #hashFn = DEFAULT_HASH_FUNCTION;\n  // maps the hashcode to key set\n  #keyMap = /* @__PURE__ */ new Map();\n  // returns a tuple of [<masterKey>, <hash>]. Expects an object key.\n  #unpack = (key) => {\n    const hash = this.#hashFn(key);\n    return [(this.#keyMap.get(hash) || []).find((k) => isEqual(k, key)), hash];\n  };\n  constructor() {\n    super();\n  }\n  /**\n   * Returns a new {@link ValueMap} object.\n   * @param fn An optional custom hash function\n   */\n  static init(fn) {\n    const m = new ValueMap();\n    if (fn) m.#hashFn = fn;\n    return m;\n  }\n  clear() {\n    super.clear();\n    this.#keyMap.clear();\n  }\n  /**\n   * @returns true if an element in the Map existed and has been removed, or false if the element does not exist.\n   */\n  delete(key) {\n    if (isPrimitive(key)) return super.delete(key);\n    const [masterKey, hash] = this.#unpack(key);\n    if (!super.delete(masterKey)) return false;\n    this.#keyMap.set(\n      hash,\n      this.#keyMap.get(hash).filter((k) => !isEqual(k, masterKey))\n    );\n    return true;\n  }\n  /**\n   * Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.\n   * @returns Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned.\n   */\n  get(key) {\n    if (isPrimitive(key)) return super.get(key);\n    const [masterKey, _] = this.#unpack(key);\n    return super.get(masterKey);\n  }\n  /**\n   * @returns boolean indicating whether an element with the specified key exists or not.\n   */\n  has(key) {\n    if (isPrimitive(key)) return super.has(key);\n    const [masterKey, _] = this.#unpack(key);\n    return super.has(masterKey);\n  }\n  /**\n   * Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.\n   */\n  set(key, value) {\n    if (isPrimitive(key)) return super.set(key, value);\n    const [masterKey, hash] = this.#unpack(key);\n    if (super.has(masterKey)) {\n      super.set(masterKey, value);\n    } else {\n      super.set(key, value);\n      const keys = this.#keyMap.get(hash) || [];\n      keys.push(key);\n      this.#keyMap.set(hash, keys);\n    }\n    return this;\n  }\n  /**\n   * @returns the number of elements in the Map.\n   */\n  get size() {\n    return super.size;\n  }\n}\nfunction assert(condition, message) {\n  if (!condition) throw new MingoError(message);\n}\nfunction typeOf(v) {\n  if (v === null) return \"null\";\n  const t = typeof v;\n  if (t !== \"object\" && t in SORT_ORDER) return t;\n  if (isArray(v)) return \"array\";\n  if (isDate(v)) return \"date\";\n  if (isRegExp(v)) return \"regexp\";\n  const s = Object.prototype.toString.call(v);\n  return s === \"[object Object]\" ? v?.constructor?.name?.toLowerCase() || \"object\" : s.substring(8, s.length - 1).toLowerCase();\n}\nconst isBoolean = (v) => typeof v === \"boolean\";\nconst isString = (v) => typeof v === \"string\";\nconst isSymbol = (v) => typeof v === \"symbol\";\nconst isNumber = (v) => !isNaN(v) && typeof v === \"number\";\nconst isArray = Array.isArray;\nconst isObject = (v) => typeOf(v) === \"object\";\nconst isObjectLike = (v) => !isPrimitive(v);\nconst isDate = (v) => v instanceof Date;\nconst isRegExp = (v) => v instanceof RegExp;\nconst isFunction = (v) => typeof v === \"function\";\nconst isNil = (v) => v === null || v === void 0;\nconst truthy = (arg, strict = true) => !!arg || strict && arg === \"\";\nconst isEmpty = (x) => isNil(x) || isString(x) && !x || isArray(x) && x.length === 0 || isObject(x) && Object.keys(x).length === 0;\nconst ensureArray = (x) => isArray(x) ? x : [x];\nconst has = (obj, prop) => !!obj && Object.prototype.hasOwnProperty.call(obj, prop);\nconst isTypedArray = (v) => typeof ArrayBuffer !== \"undefined\" && ArrayBuffer.isView(v);\nconst cloneDeep = (v, refs) => {\n  if (isNil(v) || isBoolean(v) || isNumber(v) || isString(v)) return v;\n  if (isDate(v)) return new Date(v);\n  if (isRegExp(v)) return new RegExp(v);\n  if (isTypedArray(v)) {\n    const ctor = v.constructor;\n    return new ctor(v);\n  }\n  if (!(refs instanceof Set)) refs = /* @__PURE__ */ new Set();\n  if (refs.has(v)) throw new Error(ERR_CYCLE_FOUND);\n  refs.add(v);\n  try {\n    if (isArray(v)) {\n      const arr = new Array(v.length);\n      for (let i = 0; i < v.length; i++) arr[i] = cloneDeep(v[i], refs);\n      return arr;\n    }\n    if (isObject(v)) {\n      const obj = {};\n      for (const k of Object.keys(v)) obj[k] = cloneDeep(v[k], refs);\n      return obj;\n    }\n  } finally {\n    refs.delete(v);\n  }\n  return v;\n};\nconst isMissing = (v) => v === MISSING;\nfunction merge(target, input) {\n  if (isMissing(target) || isNil(target)) return input;\n  if (isMissing(input) || isNil(input)) return target;\n  if (isPrimitive(target) || isPrimitive(input)) return input;\n  if (isArray(target) && isArray(input)) {\n    assert(\n      target.length === input.length,\n      \"arrays must be of equal length to merge.\"\n    );\n  }\n  for (const k of Object.keys(input)) {\n    target[k] = merge(target[k], input[k]);\n  }\n  return target;\n}\nfunction intersection(input, hashFunc = DEFAULT_HASH_FUNCTION) {\n  const vmaps = [ValueMap.init(hashFunc), ValueMap.init(hashFunc)];\n  if (input.length === 0) return [];\n  if (input.some((arr) => arr.length === 0)) return [];\n  if (input.length === 1) return [...input];\n  input[input.length - 1].forEach((v) => vmaps[0].set(v, true));\n  for (let i = input.length - 2; i > -1; i--) {\n    input[i].forEach((v) => {\n      if (vmaps[0].has(v)) vmaps[1].set(v, true);\n    });\n    if (vmaps[1].size === 0) return [];\n    vmaps.reverse();\n    vmaps[1].clear();\n  }\n  return Array.from(vmaps[0].keys());\n}\nfunction flatten(xs, depth = 1) {\n  const arr = new Array();\n  function flatten2(ys, n) {\n    for (let i = 0, len = ys.length; i < len; i++) {\n      if (isArray(ys[i]) && (n > 0 || n < 0)) {\n        flatten2(ys[i], Math.max(-1, n - 1));\n      } else {\n        arr.push(ys[i]);\n      }\n    }\n  }\n  flatten2(xs, depth);\n  return arr;\n}\nfunction getMembersOf(o) {\n  const props = {};\n  while (o) {\n    for (const k of Object.getOwnPropertyNames(o))\n      if (!(k in props)) props[k] = o[k];\n    o = Object.getPrototypeOf(o);\n  }\n  return props;\n}\nconst hasCustomString = (o) => o !== null && o !== void 0 && o[\"toString\"] !== Object.prototype.toString;\nfunction isEqual(a, b) {\n  if (a === b || Object.is(a, b)) return true;\n  if (a === null || b === null) return false;\n  if (typeof a !== typeof b) return false;\n  if (typeof a !== \"object\") return false;\n  if (isDate(a)) return isDate(b) && +a === +b;\n  if (isRegExp(a)) return isRegExp(b) && a.toString() === b.toString();\n  const t = typeOf(a);\n  if (t !== typeOf(b)) return false;\n  switch (t) {\n    case \"array\":\n      if (a.length !== b.length) return false;\n      for (let i = 0, size = a.length; i < size; i++) {\n        if (!isEqual(a[i], b[i])) return false;\n      }\n      return true;\n    case \"object\": {\n      const ka = Object.keys(a);\n      const kb = Object.keys(b);\n      if (ka.length !== kb.length) return false;\n      for (const k of ka) {\n        if (!(k in b && isEqual(a[k], b[k]))) return false;\n      }\n      return true;\n    }\n    default:\n      return hasCustomString(a) && a.toString() === b.toString();\n  }\n}\nfunction unique(input, hashFunc = DEFAULT_HASH_FUNCTION) {\n  const m = ValueMap.init(hashFunc);\n  input.forEach((v) => m.set(v, true));\n  return Array.from(m.keys());\n}\nfunction stringify(v, refs) {\n  if (v === null) return \"null\";\n  if (v === void 0) return \"undefined\";\n  if (isString(v) || isNumber(v) || isBoolean(v)) return JSON.stringify(v);\n  if (isDate(v)) return v.toISOString();\n  if (isRegExp(v) || isSymbol(v) || isFunction(v))\n    return v.toString();\n  if (!(refs instanceof Set)) refs = /* @__PURE__ */ new Set();\n  if (refs.has(v)) throw new Error(ERR_CYCLE_FOUND);\n  try {\n    refs.add(v);\n    if (isArray(v)) return \"[\" + v.map((s2) => stringify(s2, refs)).join(\",\") + \"]\";\n    if (isObject(v)) {\n      const keys = Object.keys(v).sort();\n      return \"{\" + keys.map((k) => `${k}:${stringify(v[k], refs)}`).join() + \"}\";\n    }\n    const s = hasCustomString(v) ? v.toString() : stringify(getMembersOf(v), refs);\n    return typeOf(v) + \"(\" + s + \")\";\n  } finally {\n    refs.delete(v);\n  }\n}\nfunction hashCode(value, hashFunc) {\n  if (isNil(value)) return null;\n  hashFunc = hashFunc || DEFAULT_HASH_FUNCTION;\n  return hashFunc(value);\n}\nfunction groupBy(collection, keyFunc, hashFunc = DEFAULT_HASH_FUNCTION) {\n  if (collection.length < 1) return /* @__PURE__ */ new Map();\n  const result = ValueMap.init(hashFunc);\n  for (let i = 0; i < collection.length; i++) {\n    const obj = collection[i];\n    const key = keyFunc(obj, i) ?? null;\n    let a = result.get(key);\n    if (!a) {\n      a = [obj];\n      result.set(key, a);\n    } else {\n      a.push(obj);\n    }\n  }\n  return result;\n}\nfunction getValue(obj, key) {\n  return isObjectLike(obj) ? obj[key] : void 0;\n}\nfunction unwrap(arr, depth) {\n  if (depth < 1) return arr;\n  while (depth-- && arr.length === 1) arr = arr[0];\n  return arr;\n}\nfunction resolve(obj, selector, options) {\n  let depth = 0;\n  function resolve2(o, path) {\n    let value = o;\n    for (let i = 0; i < path.length; i++) {\n      const field = path[i];\n      const isText = /^\\d+$/.exec(field) === null;\n      if (isText && isArray(value)) {\n        if (i === 0 && depth > 0) break;\n        depth += 1;\n        const subpath = path.slice(i);\n        value = value.reduce((acc, item) => {\n          const v = resolve2(item, subpath);\n          if (v !== void 0) acc.push(v);\n          return acc;\n        }, []);\n        break;\n      } else {\n        value = getValue(value, field);\n      }\n      if (value === void 0) break;\n    }\n    return value;\n  }\n  const res = isScalar(obj) ? obj : resolve2(obj, selector.split(\".\"));\n  return isArray(res) && options?.unwrapArray ? unwrap(res, depth) : res;\n}\nfunction resolveGraph(obj, selector, options) {\n  const sep = selector.indexOf(\".\");\n  const key = sep == -1 ? selector : selector.substring(0, sep);\n  const next = selector.substring(sep + 1);\n  const hasNext = sep != -1;\n  if (isArray(obj)) {\n    const isIndex = /^\\d+$/.test(key);\n    const arr = isIndex && options?.preserveIndex ? [...obj] : [];\n    if (isIndex) {\n      const index = parseInt(key);\n      let value2 = getValue(obj, index);\n      if (hasNext) {\n        value2 = resolveGraph(value2, next, options);\n      }\n      if (options?.preserveIndex) {\n        arr[index] = value2;\n      } else {\n        arr.push(value2);\n      }\n    } else {\n      for (const item of obj) {\n        const value2 = resolveGraph(item, selector, options);\n        if (options?.preserveMissing) {\n          arr.push(value2 == void 0 ? MISSING : value2);\n        } else if (value2 != void 0 || options?.preserveIndex) {\n          arr.push(value2);\n        }\n      }\n    }\n    return arr;\n  }\n  const res = options?.preserveKeys ? { ...obj } : {};\n  let value = getValue(obj, key);\n  if (hasNext) {\n    value = resolveGraph(value, next, options);\n  }\n  if (value === void 0) return void 0;\n  res[key] = value;\n  return res;\n}\nfunction filterMissing(obj) {\n  if (isArray(obj)) {\n    for (let i = obj.length - 1; i >= 0; i--) {\n      if (obj[i] === MISSING) {\n        obj.splice(i, 1);\n      } else {\n        filterMissing(obj[i]);\n      }\n    }\n  } else if (isObject(obj)) {\n    for (const k in obj) {\n      if (has(obj, k)) {\n        filterMissing(obj[k]);\n      }\n    }\n  }\n}\nconst NUMBER_RE = /^\\d+$/;\nfunction walk(obj, selector, fn, options) {\n  const names = selector.split(\".\");\n  const key = names[0];\n  const next = names.slice(1).join(\".\");\n  if (names.length === 1) {\n    if (isObject(obj) || isArray(obj) && NUMBER_RE.test(key)) {\n      fn(obj, key);\n    }\n  } else {\n    if (options?.buildGraph && isNil(obj[key])) {\n      obj[key] = {};\n    }\n    const item = obj[key];\n    if (!item) return;\n    const isNextArrayIndex = !!(names.length > 1 && NUMBER_RE.test(names[1]));\n    if (isArray(item) && options?.descendArray && !isNextArrayIndex) {\n      item.forEach((e) => walk(e, next, fn, options));\n    } else {\n      walk(item, next, fn, options);\n    }\n  }\n}\nfunction setValue(obj, selector, value) {\n  walk(\n    obj,\n    selector,\n    (item, key) => {\n      item[key] = isFunction(value) ? value(item[key]) : value;\n    },\n    { buildGraph: true }\n  );\n}\nfunction removeValue(obj, selector, options) {\n  walk(\n    obj,\n    selector,\n    (item, key) => {\n      if (isArray(item)) {\n        item.splice(parseInt(key), 1);\n      } else if (isObject(item)) {\n        delete item[key];\n      }\n    },\n    options\n  );\n}\nconst OPERATOR_NAME_PATTERN = /^\\$[a-zA-Z0-9_]+$/;\nfunction isOperator(name) {\n  return OPERATOR_NAME_PATTERN.test(name);\n}\nfunction normalize(expr) {\n  if (isScalar(expr)) {\n    return isRegExp(expr) ? { $regex: expr } : { $eq: expr };\n  }\n  if (isObjectLike(expr)) {\n    if (!Object.keys(expr).some(isOperator)) return { $eq: expr };\n    if (has(expr, \"$regex\")) {\n      const newExpr = { ...expr };\n      newExpr[\"$regex\"] = new RegExp(\n        expr[\"$regex\"],\n        expr[\"$options\"]\n      );\n      delete newExpr[\"$options\"];\n      return newExpr;\n    }\n  }\n  return expr;\n}\nfunction findInsertIndex(sorted, item, comparator = compare) {\n  let lo = 0;\n  let hi = sorted.length - 1;\n  while (lo <= hi) {\n    const mid = Math.round(lo + (hi - lo) / 2);\n    if (comparator(item, sorted[mid]) < 0) {\n      hi = mid - 1;\n    } else if (comparator(item, sorted[mid]) > 0) {\n      lo = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n  return lo;\n}\nexport {\n  MingoError,\n  ValueMap,\n  assert,\n  cloneDeep,\n  compare,\n  ensureArray,\n  filterMissing,\n  findInsertIndex,\n  flatten,\n  groupBy,\n  has,\n  hashCode,\n  intersection,\n  isArray,\n  isBoolean,\n  isDate,\n  isEmpty,\n  isEqual,\n  isFunction,\n  isNil,\n  isNumber,\n  isObject,\n  isObjectLike,\n  isOperator,\n  isRegExp,\n  isString,\n  isSymbol,\n  merge,\n  normalize,\n  removeValue,\n  resolve,\n  resolveGraph,\n  setValue,\n  stringify,\n  truthy,\n  typeOf,\n  unique,\n  walk\n};\n", "import {\n  assert,\n  has,\n  isArray,\n  isFunction,\n  isNil,\n  isObject,\n  isOperator,\n  isString,\n  resolve\n} from \"./util\";\nvar ProcessingMode = /* @__PURE__ */ ((ProcessingMode2) => {\n  ProcessingMode2[ProcessingMode2[\"CLONE_OFF\"] = 0] = \"CLONE_OFF\";\n  ProcessingMode2[ProcessingMode2[\"CLONE_INPUT\"] = 1] = \"CLONE_INPUT\";\n  ProcessingMode2[ProcessingMode2[\"CLONE_OUTPUT\"] = 2] = \"CLONE_OUTPUT\";\n  ProcessingMode2[ProcessingMode2[\"CLONE_ALL\"] = 3] = \"CLONE_ALL\";\n  return ProcessingMode2;\n})(ProcessingMode || {});\nclass ComputeOptions {\n  #options;\n  /** Reference to the root object when processing subgraphs of the object. */\n  #root;\n  #local;\n  constructor(options, root, local) {\n    this.#options = options;\n    this.update(root, local);\n  }\n  /**\n   * Initialize new ComputeOptions.\n   * @returns {ComputeOptions}\n   */\n  static init(options, root, local) {\n    return !(options instanceof ComputeOptions) ? new ComputeOptions(options, root, local) : new ComputeOptions(options.#options, options.root ?? root, {\n      ...options.#local,\n      ...local,\n      variables: Object.assign(\n        {},\n        options.#local?.variables,\n        local?.variables\n      )\n    });\n  }\n  /**\n   * Updates the internal state.\n   *\n   * @param root The new root context for this object.\n   * @param local The new local state to merge into current if it exists.\n   * @returns\n   */\n  update(root, local) {\n    this.#root = root;\n    const variables = Object.assign(\n      {},\n      this.#local?.variables,\n      local?.variables\n    );\n    if (Object.keys(variables).length) {\n      this.#local = { ...local, variables };\n    } else {\n      this.#local = local ?? {};\n    }\n    return this;\n  }\n  getOptions() {\n    return Object.freeze({\n      ...this.#options,\n      context: Context.from(this.#options.context)\n    });\n  }\n  get root() {\n    return this.#root;\n  }\n  get local() {\n    return this.#local;\n  }\n  get idKey() {\n    return this.#options.idKey;\n  }\n  get collation() {\n    return this.#options?.collation;\n  }\n  get processingMode() {\n    return this.#options?.processingMode || 0 /* CLONE_OFF */;\n  }\n  get useStrictMode() {\n    return this.#options?.useStrictMode;\n  }\n  get scriptEnabled() {\n    return this.#options?.scriptEnabled;\n  }\n  get useGlobalContext() {\n    return this.#options?.useGlobalContext;\n  }\n  get hashFunction() {\n    return this.#options?.hashFunction;\n  }\n  get collectionResolver() {\n    return this.#options?.collectionResolver;\n  }\n  get jsonSchemaValidator() {\n    return this.#options?.jsonSchemaValidator;\n  }\n  get variables() {\n    return this.#options?.variables;\n  }\n  get context() {\n    return this.#options?.context;\n  }\n}\nfunction initOptions(options) {\n  return options instanceof ComputeOptions ? options.getOptions() : Object.freeze({\n    idKey: \"_id\",\n    scriptEnabled: true,\n    useStrictMode: true,\n    useGlobalContext: true,\n    processingMode: 0 /* CLONE_OFF */,\n    ...options,\n    context: options?.context ? Context.from(options?.context) : Context.init()\n  });\n}\nvar OpType = /* @__PURE__ */ ((OpType2) => {\n  OpType2[\"ACCUMULATOR\"] = \"accumulator\";\n  OpType2[\"EXPRESSION\"] = \"expression\";\n  OpType2[\"PIPELINE\"] = \"pipeline\";\n  OpType2[\"PROJECTION\"] = \"projection\";\n  OpType2[\"QUERY\"] = \"query\";\n  OpType2[\"WINDOW\"] = \"window\";\n  return OpType2;\n})(OpType || {});\nclass Context {\n  #operators = /* @__PURE__ */ new Map();\n  constructor() {\n  }\n  static init() {\n    return new Context();\n  }\n  static from(ctx) {\n    const instance = Context.init();\n    if (isNil(ctx)) return instance;\n    ctx.#operators.forEach((v, k) => instance.addOperators(k, v));\n    return instance;\n  }\n  addOperators(type, operators) {\n    if (!this.#operators.has(type)) this.#operators.set(type, {});\n    for (const [name, fn] of Object.entries(operators)) {\n      if (!this.getOperator(type, name)) {\n        this.#operators.get(type)[name] = fn;\n      }\n    }\n    return this;\n  }\n  getOperator(type, name) {\n    const ops = this.#operators.get(type) ?? {};\n    return ops[name] ?? null;\n  }\n  addAccumulatorOps(ops) {\n    return this.addOperators(\"accumulator\" /* ACCUMULATOR */, ops);\n  }\n  addExpressionOps(ops) {\n    return this.addOperators(\"expression\" /* EXPRESSION */, ops);\n  }\n  addQueryOps(ops) {\n    return this.addOperators(\"query\" /* QUERY */, ops);\n  }\n  addPipelineOps(ops) {\n    return this.addOperators(\"pipeline\" /* PIPELINE */, ops);\n  }\n  addProjectionOps(ops) {\n    return this.addOperators(\"projection\" /* PROJECTION */, ops);\n  }\n  addWindowOps(ops) {\n    return this.addOperators(\"window\" /* WINDOW */, ops);\n  }\n}\nconst GC = Context.init();\nconst GC_REGISTRY = {\n  [\"accumulator\" /* ACCUMULATOR */]: GC.addAccumulatorOps.bind(GC),\n  [\"expression\" /* EXPRESSION */]: GC.addExpressionOps.bind(GC),\n  [\"pipeline\" /* PIPELINE */]: GC.addPipelineOps.bind(GC),\n  [\"projection\" /* PROJECTION */]: GC.addProjectionOps.bind(GC),\n  [\"query\" /* QUERY */]: GC.addQueryOps.bind(GC),\n  [\"window\" /* WINDOW */]: GC.addWindowOps.bind(GC)\n};\nfunction useOperators(type, operators) {\n  for (const [name, fn] of Object.entries(operators)) {\n    assert(\n      isFunction(fn) && isOperator(name),\n      `'${name}' is not a valid operator`\n    );\n    const currentFn = getOperator(type, name, null);\n    assert(\n      !currentFn || fn === currentFn,\n      `${name} already exists for '${type}' operators. Cannot change operator function once registered.`\n    );\n  }\n  GC_REGISTRY[type](operators);\n}\nfunction getOperator(type, name, options) {\n  const { context: ctx, useGlobalContext: fallback } = options || {};\n  const fn = ctx ? ctx.getOperator(type, name) : null;\n  return !fn && fallback ? GC.getOperator(type, name) : fn;\n}\nfunction computeValue(obj, expr, operator, options) {\n  const copts = ComputeOptions.init(options, obj);\n  return !!operator && isOperator(operator) ? computeOperator(obj, expr, operator, copts) : computeExpression(obj, expr, copts);\n}\nconst SYSTEM_VARS = [\"$$ROOT\", \"$$CURRENT\", \"$$REMOVE\", \"$$NOW\"];\nfunction computeExpression(obj, expr, options) {\n  if (isString(expr) && expr.length > 0 && expr[0] === \"$\") {\n    if (REDACT_ACTIONS.includes(expr)) return expr;\n    let ctx = options.root;\n    const arr = expr.split(\".\");\n    if (SYSTEM_VARS.includes(arr[0])) {\n      switch (arr[0]) {\n        case \"$$ROOT\":\n          break;\n        case \"$$CURRENT\":\n          ctx = obj;\n          break;\n        case \"$$REMOVE\":\n          ctx = void 0;\n          break;\n        case \"$$NOW\":\n          ctx = /* @__PURE__ */ new Date();\n          break;\n      }\n      expr = expr.slice(arr[0].length + 1);\n    } else if (arr[0].slice(0, 2) === \"$$\") {\n      ctx = Object.assign(\n        {},\n        // global vars\n        options.variables,\n        // current item is added before local variables because the binding may be changed.\n        { this: obj },\n        // local vars\n        options?.local?.variables\n      );\n      const name = arr[0].slice(2);\n      assert(has(ctx, name), `Use of undefined variable: ${name}`);\n      expr = expr.slice(2);\n    } else {\n      expr = expr.slice(1);\n    }\n    return expr === \"\" ? ctx : resolve(ctx, expr);\n  }\n  if (isArray(expr)) {\n    return expr.map((item) => computeExpression(obj, item, options));\n  }\n  if (isObject(expr)) {\n    const result = {};\n    const elems = Object.entries(expr);\n    for (const [key, val] of elems) {\n      if (isOperator(key)) {\n        assert(elems.length == 1, \"expression must have single operator.\");\n        return computeOperator(obj, val, key, options);\n      }\n      result[key] = computeExpression(obj, val, options);\n    }\n    return result;\n  }\n  return expr;\n}\nfunction computeOperator(obj, expr, operator, options) {\n  const callExpression = getOperator(\n    \"expression\" /* EXPRESSION */,\n    operator,\n    options\n  );\n  if (callExpression) return callExpression(obj, expr, options);\n  const callAccumulator = getOperator(\n    \"accumulator\" /* ACCUMULATOR */,\n    operator,\n    options\n  );\n  assert(!!callAccumulator, `accumulator '${operator}' is not registered.`);\n  if (!isArray(obj)) {\n    obj = computeExpression(obj, expr, options);\n    expr = null;\n  }\n  assert(isArray(obj), `arguments must resolve to array for ${operator}.`);\n  return callAccumulator(obj, expr, options);\n}\nconst REDACT_ACTIONS = [\"$$KEEP\", \"$$PRUNE\", \"$$DESCEND\"];\nfunction redact(obj, expr, options) {\n  const action = computeValue(obj, expr, null, options);\n  switch (action) {\n    case \"$$KEEP\":\n      return obj;\n    case \"$$PRUNE\":\n      return void 0;\n    case \"$$DESCEND\": {\n      if (!has(expr, \"$cond\")) return obj;\n      const output = {};\n      for (const [key, value] of Object.entries(obj)) {\n        if (isArray(value)) {\n          const res = new Array();\n          for (let elem of value) {\n            if (isObject(elem)) {\n              elem = redact(elem, expr, options.update(elem));\n            }\n            if (!isNil(elem)) res.push(elem);\n          }\n          output[key] = res;\n        } else if (isObject(value)) {\n          const res = redact(\n            value,\n            expr,\n            options.update(value)\n          );\n          if (!isNil(res)) output[key] = res;\n        } else {\n          output[key] = value;\n        }\n      }\n      return output;\n    }\n    default:\n      return action;\n  }\n}\nexport {\n  ComputeOptions,\n  Context,\n  OpType,\n  ProcessingMode,\n  computeValue,\n  getOperator,\n  initOptions,\n  redact,\n  useOperators\n};\n", "export * from \"./and\";\nexport * from \"./not\";\nexport * from \"./or\";\n", "import { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\nconst $and = (obj, expr, options) => {\n  const value = computeValue(obj, expr, null, options);\n  return truthy(value, options.useStrictMode) && value.every((v) => truthy(v, options.useStrictMode));\n};\nexport {\n  $and\n};\n", "import { computeValue } from \"../../../core\";\nimport { assert, ensureArray } from \"../../../util\";\nconst $not = (obj, expr, options) => {\n  const booleanExpr = ensureArray(expr);\n  if (booleanExpr.length == 0) return false;\n  assert(booleanExpr.length == 1, \"Expression $not takes exactly 1 argument\");\n  return !computeValue(obj, booleanExpr[0], null, options);\n};\nexport {\n  $not\n};\n", "import { computeValue } from \"../../../core\";\nimport { truthy } from \"../../../util\";\nconst $or = (obj, expr, options) => {\n  const value = computeValue(obj, expr, null, options);\n  const strict = options.useStrictMode;\n  return truthy(value, strict) && value.some((v) => truthy(v, strict));\n};\nexport {\n  $or\n};\n", "export * from \"./cmp\";\nexport * from \"./eq\";\nexport * from \"./gt\";\nexport * from \"./gte\";\nexport * from \"./lt\";\nexport * from \"./lte\";\nexport * from \"./ne\";\n", "import { computeValue } from \"../../../core\";\nimport { assert, compare, isArray } from \"../../../util\";\nconst $cmp = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  assert(\n    isArray(args) && args.length == 2,\n    \"$cmp: expression must resolve to array of size 2.\"\n  );\n  return compare(args[0], args[1]);\n};\nexport {\n  $cmp\n};\n", "import { assert } from \"./util\";\nfunction Lazy(source) {\n  return source instanceof Iterator ? source : new Iterator(source);\n}\nfunction concat(...iterators) {\n  let index = 0;\n  return Lazy(() => {\n    while (index < iterators.length) {\n      const o = iterators[index].next();\n      if (!o.done) return o;\n      index++;\n    }\n    return { done: true };\n  });\n}\nfunction isGenerator(o) {\n  return !!o && typeof o === \"object\" && typeof o?.next === \"function\";\n}\nfunction isIterable(o) {\n  return !!o && (typeof o === \"object\" || typeof o === \"function\") && typeof o[Symbol.iterator] === \"function\";\n}\nclass Iterator {\n  #iteratees = [];\n  #buffer = [];\n  #getNext;\n  #done = false;\n  constructor(source) {\n    const iter = isIterable(source) ? source[Symbol.iterator]() : isGenerator(source) ? source : typeof source === \"function\" ? { next: source } : null;\n    assert(\n      !!iter,\n      `Iterator must be initialized with an iterable or function.`\n    );\n    let index = -1;\n    let current = { done: false };\n    this.#getNext = () => {\n      while (!current.done) {\n        current = iter.next();\n        if (current.done) break;\n        let value = current.value;\n        index++;\n        const ok = this.#iteratees.every(({ op: action, fn }) => {\n          const res = fn(value, index);\n          return action === \"map\" ? !!(value = res) || true : res;\n        });\n        if (ok) return { value, done: false };\n      }\n      return { done: true };\n    };\n  }\n  /**\n   * Add an iteratee to this lazy sequence\n   */\n  push(op, fn) {\n    this.#iteratees.push({ op, fn });\n    return this;\n  }\n  next() {\n    return this.#getNext();\n  }\n  // Iteratees methods\n  /**\n   * Transform each item in the sequence to a new value\n   * @param {Function} f\n   */\n  map(f) {\n    return this.push(\"map\", f);\n  }\n  /**\n   * Select only items matching the given predicate\n   * @param {Function} f\n   */\n  filter(f) {\n    return this.push(\"filter\", f);\n  }\n  /**\n   * Take given numbe for values from sequence\n   * @param {Number} n A number greater than 0\n   */\n  take(n) {\n    return n > 0 ? this.filter((_) => !(n === 0 || n-- === 0)) : this;\n  }\n  /**\n   * Drop a number of values from the sequence\n   * @param {Number} n Number of items to drop greater than 0\n   */\n  drop(n) {\n    return n > 0 ? this.filter((_) => n === 0 || n-- === 0) : this;\n  }\n  // Transformations\n  /**\n   * Returns a new lazy object with results of the transformation\n   * The entire sequence is realized.\n   *\n   * @param {Callback<Source, Any[]>} fn Tranform function of type (Array) => (Any)\n   */\n  transform(fn) {\n    const self = this;\n    let iter;\n    return Lazy(() => {\n      if (!iter) iter = Lazy(fn(self.value()));\n      return iter.next();\n    });\n  }\n  // Terminal methods\n  /**\n   * Returns the fully realized values of the iterators.\n   * The return value will be an array unless `lazy.first()` was used.\n   * The realized values are cached for subsequent calls.\n   */\n  value() {\n    while (!this.#done) {\n      const { done, value } = this.#getNext();\n      if (!done) this.#buffer.push(value);\n      this.#done = done;\n    }\n    return this.#buffer;\n  }\n  /**\n   * Execute the funcion for each value. Will stop when an execution returns false.\n   * @param {Function} f\n   * @returns {Boolean} false iff `f` return false for AnyVal execution, otherwise true\n   */\n  each(f) {\n    for (; ; ) {\n      const o = this.next();\n      if (o.done) break;\n      if (f(o.value) === false) return false;\n    }\n    return true;\n  }\n  /**\n   * Returns the reduction of sequence according the reducing function\n   *\n   * @param {*} f a reducing function\n   * @param {*} initialValue\n   */\n  reduce(f, initialValue) {\n    let o = this.next();\n    if (initialValue === void 0 && !o.done) {\n      initialValue = o.value;\n      o = this.next();\n    }\n    while (!o.done) {\n      initialValue = f(initialValue, o.value);\n      o = this.next();\n    }\n    return initialValue;\n  }\n  /**\n   * Returns the number of matched items in the sequence\n   */\n  size() {\n    return this.reduce(\n      (acc, _) => ++acc,\n      0\n    );\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n}\nexport {\n  Iterator,\n  Lazy,\n  concat\n};\n", "const $limit = (collection, expr, _options) => collection.take(expr);\nexport {\n  $limit\n};\n", "import {\n  ComputeOptions,\n  computeValue,\n  getOperator,\n  OpType\n} from \"../../core\";\nimport {\n  assert,\n  ensureArray,\n  filterMissing,\n  has,\n  isArray,\n  isBoolean,\n  isEmpty,\n  isNumber,\n  isObject,\n  isOperator,\n  isString,\n  merge,\n  removeValue,\n  resolve,\n  resolveGraph,\n  setValue\n} from \"../../util\";\nconst $project = (collection, expr, options) => {\n  if (isEmpty(expr)) return collection;\n  validateExpression(expr, options);\n  return collection.map(createHandler(expr, ComputeOptions.init(options)));\n};\nfunction createHandler(expr, options, isRoot = true) {\n  const idKey = options.idKey;\n  const expressionKeys = Object.keys(expr);\n  const excludedKeys = new Array();\n  const includedKeys = new Array();\n  const handlers = {};\n  for (const key of expressionKeys) {\n    const subExpr = expr[key];\n    if (isNumber(subExpr) || isBoolean(subExpr)) {\n      if (subExpr) {\n        includedKeys.push(key);\n      } else {\n        excludedKeys.push(key);\n      }\n    } else if (isArray(subExpr)) {\n      handlers[key] = (o) => subExpr.map((v) => computeValue(o, v, null, options.update(o)) ?? null);\n    } else if (isObject(subExpr)) {\n      const subExprKeys = Object.keys(subExpr);\n      const operator = subExprKeys.length == 1 ? subExprKeys[0] : \"\";\n      const projectFn = getOperator(\n        OpType.PROJECTION,\n        operator,\n        options\n      );\n      if (projectFn) {\n        const foundSlice = operator === \"$slice\";\n        if (foundSlice && !ensureArray(subExpr[operator]).every(isNumber)) {\n          handlers[key] = (o) => computeValue(o, subExpr, key, options.update(o));\n        } else {\n          handlers[key] = (o) => projectFn(o, subExpr[operator], key, options.update(o));\n        }\n      } else if (isOperator(operator)) {\n        handlers[key] = (o) => computeValue(o, subExpr[operator], operator, options);\n      } else {\n        validateExpression(subExpr, options);\n        handlers[key] = (o) => {\n          if (!has(o, key)) return computeValue(o, subExpr, null, options);\n          if (isRoot) options.update(o);\n          const target = resolve(o, key);\n          const fn = createHandler(subExpr, options, false);\n          if (isArray(target)) return target.map(fn);\n          if (isObject(target)) return fn(target);\n          return fn(o);\n        };\n      }\n    } else {\n      handlers[key] = isString(subExpr) && subExpr[0] === \"$\" ? (o) => computeValue(o, subExpr, key, options) : (_) => subExpr;\n    }\n  }\n  const handlerKeys = Object.keys(handlers);\n  const idKeyExcluded = excludedKeys.includes(idKey);\n  const idKeyOnlyExcluded = isRoot && idKeyExcluded && excludedKeys.length === 1 && !includedKeys.length && !handlerKeys.length;\n  if (idKeyOnlyExcluded) {\n    return (o) => {\n      const newObj = { ...o };\n      delete newObj[idKey];\n      return newObj;\n    };\n  }\n  const idKeyImplicit = isRoot && !idKeyExcluded && !includedKeys.includes(idKey);\n  const opts = {\n    preserveMissing: true\n  };\n  return (o) => {\n    const newObj = {};\n    if (excludedKeys.length && !includedKeys.length) {\n      merge(newObj, o);\n      for (const k of excludedKeys) {\n        removeValue(newObj, k, { descendArray: true });\n      }\n    }\n    for (const k of includedKeys) {\n      const pathObj = resolveGraph(o, k, opts) ?? {};\n      merge(newObj, pathObj);\n    }\n    if (includedKeys.length) filterMissing(newObj);\n    for (const k of handlerKeys) {\n      const value = handlers[k](o);\n      if (value === void 0) {\n        removeValue(newObj, k, { descendArray: true });\n      } else {\n        setValue(newObj, k, value);\n      }\n    }\n    if (idKeyImplicit && has(o, idKey)) {\n      newObj[idKey] = resolve(o, idKey);\n    }\n    return newObj;\n  };\n}\nfunction validateExpression(expr, options) {\n  let exclusions = false;\n  let inclusions = false;\n  for (const [k, v] of Object.entries(expr)) {\n    assert(!k.startsWith(\"$\"), \"Field names may not start with '$'.\");\n    assert(\n      !k.endsWith(\".$\"),\n      \"Positional projection operator '$' is not supported.\"\n    );\n    if (k === options?.idKey) continue;\n    if (v === 0 || v === false) {\n      exclusions = true;\n    } else if (v === 1 || v === true) {\n      inclusions = true;\n    }\n    assert(\n      !(exclusions && inclusions),\n      \"Projection cannot have a mix of inclusion and exclusion.\"\n    );\n  }\n}\nexport {\n  $project\n};\n", "const $skip = (collection, expr, _options) => {\n  return collection.drop(expr);\n};\nexport {\n  $skip\n};\n", "import {\n  assert,\n  compare,\n  groupBy,\n  isEmpty,\n  isObject,\n  isString,\n  resolve\n} from \"../../util\";\nconst $sort = (collection, sortKeys, options) => {\n  if (isEmpty(sortKeys) || !isObject(sortKeys)) return collection;\n  let cmp = compare;\n  const collationSpec = options.collation;\n  if (isObject(collationSpec) && isString(collationSpec.locale)) {\n    cmp = collationComparator(collationSpec);\n  }\n  return collection.transform((coll) => {\n    const modifiers = Object.keys(sortKeys);\n    for (const key of modifiers.reverse()) {\n      const groups = groupBy(\n        coll,\n        (obj) => resolve(obj, key),\n        options.hashFunction\n      );\n      const sortedKeys = Array.from(groups.keys()).sort(cmp);\n      if (sortKeys[key] === -1) sortedKeys.reverse();\n      let i = 0;\n      for (const k of sortedKeys) for (const v of groups.get(k)) coll[i++] = v;\n      assert(i == coll.length, \"bug: counter must match collection size.\");\n    }\n    return coll;\n  });\n};\nconst COLLATION_STRENGTH = {\n  // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n  1: \"base\",\n  //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.\n  // Examples: a ≠ b, a ≠ á, a = A.\n  2: \"accent\",\n  // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n  // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A\n  3: \"variant\"\n  // case - Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n};\nfunction collationComparator(spec) {\n  const localeOpt = {\n    sensitivity: COLLATION_STRENGTH[spec.strength || 3],\n    caseFirst: spec.caseFirst === \"off\" ? \"false\" : spec.caseFirst || \"false\",\n    numeric: spec.numericOrdering || false,\n    ignorePunctuation: spec.alternate === \"shifted\"\n  };\n  if (spec.caseLevel === true) {\n    if (localeOpt.sensitivity === \"base\") localeOpt.sensitivity = \"case\";\n    if (localeOpt.sensitivity === \"accent\") localeOpt.sensitivity = \"variant\";\n  }\n  const collator = new Intl.Collator(spec.locale, localeOpt);\n  return (a, b) => {\n    if (!isString(a) || !isString(b)) return compare(a, b);\n    const i = collator.compare(a, b);\n    if (i < 0) return -1;\n    if (i > 0) return 1;\n    return 0;\n  };\n}\nexport {\n  $sort\n};\n", "import {\n  ProcessingMode\n} from \"./core\";\nimport { concat, Lazy } from \"./lazy\";\nimport { $limit } from \"./operators/pipeline/limit\";\nimport { $project } from \"./operators/pipeline/project\";\nimport { $skip } from \"./operators/pipeline/skip\";\nimport { $sort } from \"./operators/pipeline/sort\";\nimport { cloneDeep, has } from \"./util\";\nconst OPERATORS = { $sort, $skip, $limit };\nclass Cursor {\n  #source;\n  #predicate;\n  #projection;\n  #options;\n  #operators = {};\n  #result = null;\n  #buffer = [];\n  /**\n   * Creates an instance of the Cursor class.\n   *\n   * @param source - The source of data to be iterated over.\n   * @param predicate - A function or condition to filter the data.\n   * @param projection - An object specifying the fields to include or exclude in the result.\n   * @param options - Optional settings to customize the behavior of the cursor.\n   */\n  constructor(source, predicate, projection, options) {\n    this.#source = source;\n    this.#predicate = predicate;\n    this.#projection = projection;\n    this.#options = options;\n  }\n  /** Returns the iterator from running the query */\n  fetch() {\n    if (this.#result) return this.#result;\n    this.#result = Lazy(this.#source).filter(this.#predicate);\n    const mode = this.#options.processingMode;\n    if (mode & ProcessingMode.CLONE_INPUT) this.#result.map(cloneDeep);\n    for (const op of [\"$sort\", \"$skip\", \"$limit\"]) {\n      if (has(this.#operators, op)) {\n        this.#result = OPERATORS[op](\n          this.#result,\n          this.#operators[op],\n          this.#options\n        );\n      }\n    }\n    if (Object.keys(this.#projection).length) {\n      this.#result = $project(this.#result, this.#projection, this.#options);\n    }\n    if (mode & ProcessingMode.CLONE_OUTPUT) this.#result.map(cloneDeep);\n    return this.#result;\n  }\n  /** Returns an iterator with the buffered data included */\n  fetchAll() {\n    const buffered = Lazy([...this.#buffer]);\n    this.#buffer.length = 0;\n    return concat(buffered, this.fetch());\n  }\n  /**\n   * Return remaining objects in the cursor as an array. This method exhausts the cursor\n   * @returns {Array}\n   */\n  all() {\n    return this.fetchAll().value();\n  }\n  /**\n   * Returns the number of objects return in the cursor. This method exhausts the cursor\n   * @returns {Number}\n   */\n  count() {\n    return this.all().length;\n  }\n  /**\n   * Returns a cursor that begins returning results only after passing or skipping a number of documents.\n   * @param {Number} n the number of results to skip.\n   * @return {Cursor} Returns the cursor, so you can chain this call.\n   */\n  skip(n) {\n    this.#operators[\"$skip\"] = n;\n    return this;\n  }\n  /**\n   * Limits the number of items returned by the cursor.\n   *\n   * @param n - The maximum number of items to return.\n   * @returns The current cursor instance for chaining.\n   */\n  limit(n) {\n    this.#operators[\"$limit\"] = n;\n    return this;\n  }\n  /**\n   * Returns results ordered according to a sort specification.\n   * @param {AnyObject} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending\n   * @return {Cursor} Returns the cursor, so you can chain this call.\n   */\n  sort(modifier) {\n    this.#operators[\"$sort\"] = modifier;\n    return this;\n  }\n  /**\n   * Applies a sort operation to the cursor using the specified sort modifier.\n   *\n   * @param modifier - An object specifying the sort order. The keys represent\n   * the field names, and the values indicate the sort direction (e.g., 1 for\n   * ascending and -1 for descending).\n   * @returns The current cursor instance for method chaining.\n   */\n  collation(spec) {\n    this.#options = { ...this.#options, collation: spec };\n    return this;\n  }\n  /**\n   * Retrieves the next item in the cursor.\n   *\n   * If there are items in the internal buffer, the next item is returned from the buffer.\n   * Otherwise, it fetches the next item from the underlying data source.\n   *\n   * @returns The next item of type `T` if available, or `undefined` if there are no more items.\n   */\n  next() {\n    if (this.#buffer.length > 0) {\n      return this.#buffer.pop();\n    }\n    const o = this.fetch().next();\n    if (o.done) return;\n    return o.value;\n  }\n  /**\n   * Determines if there are more elements available in the cursor.\n   *\n   * This method checks if there are any elements left in the internal buffer.\n   * If the buffer is empty, it attempts to fetch the next element from the source.\n   * If a new element is found, it is added to the buffer and the method returns `true`.\n   * Otherwise, it returns `false` indicating no more elements are available.\n   *\n   * @returns {boolean} `true` if there are more elements to iterate over, otherwise `false`.\n   */\n  hasNext() {\n    if (this.#buffer.length > 0) return true;\n    const o = this.fetch().next();\n    if (o.done) return false;\n    this.#buffer.push(o.value);\n    return true;\n  }\n  /**\n   * Transforms the elements of the cursor using the provided callback function.\n   *\n   * @template R - The type of the elements in the resulting array.\n   * @template T - The type of the elements in the cursor.\n   * @param fn - A callback function that is invoked for each element in the cursor.\n   *             It receives the current element, its index, and the entire array as arguments.\n   * @returns An array of transformed elements of type `R`.\n   */\n  map(fn) {\n    return this.all().map(fn);\n  }\n  /**\n   * Iterates over all elements in the cursor and executes the provided callback function for each element.\n   *\n   * @param fn - A callback function to execute for each element. The function receives the following arguments:\n   *   - `t`: The current element being processed in the cursor.\n   *   - `i`: The index of the current element in the array.\n   *   - `a`: The array of all elements in the cursor.\n   */\n  forEach(fn) {\n    this.all().forEach(fn);\n  }\n  /**\n   * Returns an iterator for the cursor, allowing it to be used in `for...of` loops.\n   * The iterator fetches all the results from the cursor.\n   *\n   * @returns {Iterator} An iterator over the fetched results.\n   */\n  [Symbol.iterator]() {\n    return this.fetchAll();\n  }\n}\nexport {\n  Cursor\n};\n", "import {\n  getOperator,\n  initOptions,\n  OpType\n} from \"./core\";\nimport { Cursor } from \"./cursor\";\nimport { assert, cloneDeep, isObject, isOperator, normalize } from \"./util\";\nconst TOP_LEVEL_RE = /^\\$(and|or|nor|expr|jsonSchema)$/;\nclass Query {\n  #compiled;\n  #options;\n  #condition;\n  /**\n   * Creates an instance of the query with the specified condition and options.\n   *\n   * @param condition - The query condition object used to define the criteria for matching documents.\n   * @param options - Optional configuration settings to customize the query behavior.\n   */\n  constructor(condition, options) {\n    this.#condition = cloneDeep(condition);\n    this.#options = initOptions(options);\n    this.#compiled = [];\n    this.compile();\n  }\n  compile() {\n    assert(\n      isObject(this.#condition),\n      `query criteria must be an object: ${JSON.stringify(this.#condition)}`\n    );\n    const whereOperator = {};\n    for (const [field, expr] of Object.entries(this.#condition)) {\n      if (\"$where\" === field) {\n        assert(\n          this.#options.scriptEnabled,\n          \"$where operator requires 'scriptEnabled' option to be true.\"\n        );\n        Object.assign(whereOperator, { field, expr });\n      } else if (TOP_LEVEL_RE.test(field)) {\n        this.processOperator(field, field, expr);\n      } else {\n        assert(!isOperator(field), `unknown top level operator: ${field}`);\n        for (const [operator, val] of Object.entries(\n          normalize(expr)\n        )) {\n          this.processOperator(field, operator, val);\n        }\n      }\n      if (whereOperator.field) {\n        this.processOperator(\n          whereOperator.field,\n          whereOperator.field,\n          whereOperator.expr\n        );\n      }\n    }\n  }\n  processOperator(field, operator, value) {\n    const call = getOperator(\n      OpType.QUERY,\n      operator,\n      this.#options\n    );\n    assert(!!call, `unknown query operator ${operator}`);\n    this.#compiled.push(call(field, value, this.#options));\n  }\n  /**\n   * Tests whether the given object satisfies all compiled predicates.\n   *\n   * @template T - The type of the object to test.\n   * @param obj - The object to be tested against the compiled predicates.\n   * @returns `true` if the object satisfies all predicates, otherwise `false`.\n   */\n  test(obj) {\n    return this.#compiled.every((p) => p(obj));\n  }\n  /**\n   * Returns a cursor for iterating over the items in the given collection that match the query criteria.\n   *\n   * @typeParam T - The type of the items in the resulting cursor.\n   * @param collection - The source collection to search through.\n   * @param projection - An optional object specifying fields to include or exclude\n   *                      in the returned items.\n   * @returns A `Cursor` instance for iterating over the matching items.\n   */\n  find(collection, projection) {\n    return new Cursor(\n      collection,\n      (o) => this.test(o),\n      projection || {},\n      this.#options\n    );\n  }\n}\nexport {\n  Query\n};\n", "import { computeValue } from \"../core\";\nimport { Query } from \"../query\";\nimport {\n  compare as mingoCmp,\n  ensureArray,\n  flatten,\n  intersection,\n  isArray,\n  isBoolean,\n  isDate,\n  isEmpty,\n  isEqual,\n  isNil,\n  isNumber,\n  isObject,\n  isOperator,\n  isRegExp,\n  isString,\n  resolve,\n  truthy,\n  typeOf\n} from \"../util\";\nfunction processQuery(selector, value, options, predicate) {\n  const opts = { unwrapArray: true };\n  const depth = Math.max(1, selector.split(\".\").length - 1);\n  return (o) => {\n    const lhs = resolve(o, selector, opts);\n    return predicate(lhs, value, { ...options, depth });\n  };\n}\nfunction processExpression(obj, expr, options, predicate) {\n  const args = computeValue(obj, expr, null, options);\n  return predicate(...args);\n}\nfunction $eq(a, b, options) {\n  if (isEqual(a, b)) return true;\n  if (isNil(a) && isNil(b)) return true;\n  if (isArray(a)) {\n    return a.some((v) => isEqual(v, b)) || flatten(a, options?.depth).some((v) => isEqual(v, b));\n  }\n  return false;\n}\nfunction $ne(a, b, options) {\n  return !$eq(a, b, options);\n}\nfunction $in(a, b, options) {\n  if (isNil(a)) return b.some((v) => v === null);\n  return intersection([ensureArray(a), b], options?.hashFunction).length > 0;\n}\nfunction $nin(a, b, options) {\n  return !$in(a, b, options);\n}\nfunction $lt(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) < 0);\n}\nfunction $lte(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) <= 0);\n}\nfunction $gt(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) > 0);\n}\nfunction $gte(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) >= 0);\n}\nfunction $mod(a, b, _options) {\n  return ensureArray(a).some(\n    (x) => b.length === 2 && x % b[0] === b[1]\n  );\n}\nfunction $regex(a, b, options) {\n  const lhs = ensureArray(a);\n  const match = (x) => isString(x) && truthy(b.exec(x), options?.useStrictMode);\n  return lhs.some(match) || flatten(lhs, 1).some(match);\n}\nfunction $all(values, queries, options) {\n  if (!isArray(values) || !isArray(queries) || !values.length || !queries.length) {\n    return false;\n  }\n  let matched = true;\n  for (const query of queries) {\n    if (!matched) break;\n    if (isObject(query) && Object.keys(query).includes(\"$elemMatch\")) {\n      matched = $elemMatch(values, query[\"$elemMatch\"], options);\n    } else if (isRegExp(query)) {\n      matched = values.some((s) => typeof s === \"string\" && query.test(s));\n    } else {\n      matched = values.some((v) => isEqual(query, v));\n    }\n  }\n  return matched;\n}\nfunction $size(a, b, _options) {\n  return Array.isArray(a) && a.length === b;\n}\nfunction isNonBooleanOperator(name) {\n  return isOperator(name) && [\"$and\", \"$or\", \"$nor\"].indexOf(name) === -1;\n}\nfunction $elemMatch(a, b, options) {\n  if (isArray(a) && !isEmpty(a)) {\n    let format = (x) => x;\n    let criteria = b;\n    if (Object.keys(b).every(isNonBooleanOperator)) {\n      criteria = { temp: b };\n      format = (x) => ({ temp: x });\n    }\n    const query = new Query(criteria, options);\n    for (let i = 0, len = a.length; i < len; i++) {\n      if (query.test(format(a[i]))) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nconst isNull = (a) => a === null;\nconst compareFuncs = {\n  array: isArray,\n  boolean: isBoolean,\n  bool: isBoolean,\n  date: isDate,\n  number: isNumber,\n  int: isNumber,\n  long: isNumber,\n  double: isNumber,\n  decimal: isNumber,\n  null: isNull,\n  object: isObject,\n  regexp: isRegExp,\n  regex: isRegExp,\n  string: isString,\n  // added for completeness\n  undefined: isNil,\n  // deprecated\n  // Mongo identifiers\n  1: isNumber,\n  //double\n  2: isString,\n  3: isObject,\n  4: isArray,\n  6: isNil,\n  // deprecated\n  8: isBoolean,\n  9: isDate,\n  10: isNull,\n  11: isRegExp,\n  16: isNumber,\n  //int\n  18: isNumber,\n  //long\n  19: isNumber\n  //decimal\n};\nfunction compareType(a, b, _) {\n  const f = compareFuncs[b];\n  return f ? f(a) : false;\n}\nfunction $type(a, b, options) {\n  return isArray(b) ? b.findIndex((t) => compareType(a, t, options)) >= 0 : compareType(a, b, options);\n}\nfunction compare(a, b, f) {\n  return ensureArray(a).some((x) => typeOf(x) === typeOf(b) && f(x, b));\n}\nexport {\n  $all,\n  $elemMatch,\n  $eq,\n  $gt,\n  $gte,\n  $in,\n  $lt,\n  $lte,\n  $mod,\n  $ne,\n  $nin,\n  $regex,\n  $size,\n  $type,\n  processExpression,\n  processQuery\n};\n", "import { $eq as __eq, processExpression } from \"../../_predicates\";\nconst $eq = (obj, expr, options) => processExpression(obj, expr, options, __eq);\nexport {\n  $eq\n};\n", "import { $gt as __gt, processExpression } from \"../../_predicates\";\nconst $gt = (obj, expr, options) => processExpression(obj, expr, options, __gt);\nexport {\n  $gt\n};\n", "import { $gte as __gte, processExpression } from \"../../_predicates\";\nconst $gte = (obj, expr, options) => processExpression(obj, expr, options, __gte);\nexport {\n  $gte\n};\n", "import { $lt as __lt, processExpression } from \"../../_predicates\";\nconst $lt = (obj, expr, options) => processExpression(obj, expr, options, __lt);\nexport {\n  $lt\n};\n", "import { $lte as __lte, processExpression } from \"../../_predicates\";\nconst $lte = (obj, expr, options) => processExpression(obj, expr, options, __lte);\nexport {\n  $lte\n};\n", "import { $ne as __ne, processExpression } from \"../../_predicates\";\nconst $ne = (obj, expr, options) => processExpression(obj, expr, options, __ne);\nexport {\n  $ne\n};\n", "import { computeValue } from \"../../../core\";\nimport { assert, isNil } from \"../../../util\";\nconst $slice = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  const arr = args[0];\n  let skip = args[1];\n  let limit = args[2];\n  if (isNil(limit)) {\n    if (skip < 0) {\n      skip = Math.max(0, arr.length + skip);\n    } else {\n      limit = skip;\n      skip = 0;\n    }\n  } else {\n    if (skip < 0) {\n      skip = Math.max(0, arr.length + skip);\n    }\n    assert(\n      limit > 0,\n      `Invalid argument for $slice operator. Limit must be a positive number`\n    );\n    limit += skip;\n  }\n  return arr.slice(skip, limit);\n};\nexport {\n  $slice\n};\n", "export * from \"./elemMatch\";\nexport * from \"./slice\";\n", "import { Query } from \"../../query\";\nimport { assert, isArray, resolve } from \"../../util\";\nconst $elemMatch = (obj, expr, field, options) => {\n  const arr = resolve(obj, field);\n  const query = new Query(expr, options);\n  assert(isArray(arr), \"$elemMatch: argument must resolve to array\");\n  const result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (query.test(arr[i])) {\n      if (options.useStrictMode) return [arr[i]];\n      result.push(arr[i]);\n    }\n  }\n  return result.length > 0 ? result : void 0;\n};\nexport {\n  $elemMatch\n};\n", "import { isArray, resolve } from \"../../util\";\nimport { $slice as __slice } from \"../expression/array/slice\";\nconst $slice = (obj, expr, field, options) => {\n  const xs = resolve(obj, field);\n  const exprAsArray = expr;\n  if (!isArray(xs)) return xs;\n  return __slice(\n    obj,\n    isArray(expr) ? [xs, ...exprAsArray] : [xs, expr],\n    options\n  );\n};\nexport {\n  $slice\n};\n", "export * from \"./array\";\nexport * from \"./bitwise\";\nexport * from \"./comparison\";\nexport * from \"./element\";\nexport * from \"./evaluation\";\nexport * from \"./logical\";\n", "import { $all as __all, processQuery } from \"../../_predicates\";\nconst $all = (selector, value, options) => processQuery(selector, value, options, __all);\nexport {\n  $all\n};\n", "import { $elemMatch as __elemMatch, processQuery } from \"../../_predicates\";\nconst $elemMatch = (selector, value, options) => processQuery(selector, value, options, __elemMatch);\nexport {\n  $elemMatch\n};\n", "import { $size as __size, processQuery } from \"../../_predicates\";\nconst $size = (selector, value, options) => processQuery(selector, value, options, __size);\nexport {\n  $size\n};\n", "import { isArray } from \"../../../util\";\nimport { processQuery } from \"../../_predicates\";\nconst processBitwiseQuery = (selector, value, predicate) => {\n  return processQuery(\n    selector,\n    value,\n    null,\n    (value2, mask) => {\n      let b = 0;\n      if (isArray(mask)) {\n        for (const n of mask) b = b | 1 << n;\n      } else {\n        b = mask;\n      }\n      return predicate(value2 & b, b);\n    }\n  );\n};\nexport {\n  processBitwiseQuery\n};\n", "import { processBitwiseQuery } from \"./_internal\";\nconst $bitsAllClear = (selector, value, _options) => processBitwiseQuery(selector, value, (result, _) => result == 0);\nexport {\n  $bitsAllClear\n};\n", "import { processBitwiseQuery } from \"./_internal\";\nconst $bitsAllSet = (selector, value, _options) => processBitwiseQuery(selector, value, (result, mask) => result == mask);\nexport {\n  $bitsAllSet\n};\n", "import { processBitwiseQuery } from \"./_internal\";\nconst $bitsAnyClear = (selector, value, _options) => processBitwiseQuery(selector, value, (result, mask) => result < mask);\nexport {\n  $bitsAnyClear\n};\n", "import { processBitwiseQuery } from \"./_internal\";\nconst $bitsAnySet = (selector, value, _options) => processBitwiseQuery(selector, value, (result, _) => result > 0);\nexport {\n  $bitsAnySet\n};\n", "import { $eq as __eq, processQuery } from \"../../_predicates\";\nconst $eq = (selector, value, options) => processQuery(selector, value, options, __eq);\nexport {\n  $eq\n};\n", "import { $gt as __gt, processQuery } from \"../../_predicates\";\nconst $gt = (selector, value, options) => processQuery(selector, value, options, __gt);\nexport {\n  $gt\n};\n", "import { $gte as __gte, processQuery } from \"../../_predicates\";\nconst $gte = (selector, value, options) => processQuery(selector, value, options, __gte);\nexport {\n  $gte\n};\n", "import { $in as __in, processQuery } from \"../../_predicates\";\nconst $in = (selector, value, options) => processQuery(selector, value, options, __in);\nexport {\n  $in\n};\n", "import { $lt as __lt, processQuery } from \"../../_predicates\";\nconst $lt = (selector, value, options) => processQuery(selector, value, options, __lt);\nexport {\n  $lt\n};\n", "import { $lte as __lte, processQuery } from \"../../_predicates\";\nconst $lte = (selector, value, options) => processQuery(selector, value, options, __lte);\nexport {\n  $lte\n};\n", "import { $ne as __ne, processQuery } from \"../../_predicates\";\nconst $ne = (selector, value, options) => processQuery(selector, value, options, __ne);\nexport {\n  $ne\n};\n", "import { $nin as __nin, processQuery } from \"../../_predicates\";\nconst $nin = (selector, value, options) => processQuery(selector, value, options, __nin);\nexport {\n  $nin\n};\n", "import { isArray, resolve, resolveGraph } from \"../../../util\";\nconst $exists = (selector, value, _options) => {\n  const nested = selector.includes(\".\");\n  const b = !!value;\n  if (!nested || selector.match(/\\.\\d+$/)) {\n    return (o) => resolve(o, selector) !== void 0 === b;\n  }\n  return (o) => {\n    const path = resolveGraph(o, selector, { preserveIndex: true });\n    const val = resolve(path, selector.substring(0, selector.lastIndexOf(\".\")));\n    return isArray(val) ? val.some((v) => v !== void 0) === b : val !== void 0 === b;\n  };\n};\nexport {\n  $exists\n};\n", "import { $type as __type, processQuery } from \"../../_predicates\";\nconst $type = (selector, value, options) => processQuery(selector, value, options, __type);\nexport {\n  $type\n};\n", "import { computeValue } from \"../../../core\";\nfunction $expr(_, rhs, options) {\n  return (obj) => computeValue(obj, rhs, null, options);\n}\nexport {\n  $expr\n};\n", "import { assert } from \"../../../util\";\nfunction $jsonSchema(_, schema, options) {\n  assert(\n    !!options?.jsonSchemaValidator,\n    \"$jsonSchema: must configure 'jsonSchemaValidator' option to this operator.\"\n  );\n  const validate = options?.jsonSchemaValidator(schema);\n  return (obj) => validate(obj);\n}\nexport {\n  $jsonSchema\n};\n", "import { $mod as __mod, processQuery } from \"../../_predicates\";\nconst $mod = (selector, value, options) => processQuery(selector, value, options, __mod);\nexport {\n  $mod\n};\n", "import { $regex as __regex, processQuery } from \"../../_predicates\";\nconst $regex = (selector, value, options) => processQuery(selector, value, options, __regex);\nexport {\n  $regex\n};\n", "import { assert, isFunction, truthy } from \"../../../util\";\nfunction $where(_, rhs, options) {\n  assert(\n    options.scriptEnabled,\n    \"$where operator requires 'scriptEnabled' option to be true\"\n  );\n  const f = rhs;\n  assert(isFunction(f), \"$where only accepts a Function object\");\n  return (obj) => truthy(f.call(obj), options?.useStrictMode);\n}\nexport {\n  $where\n};\n", "import { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\nconst $and = (_, rhs, options) => {\n  assert(\n    isArray(rhs),\n    \"Invalid expression: $and expects value to be an Array.\"\n  );\n  const queries = rhs.map((expr) => new Query(expr, options));\n  return (obj) => queries.every((q) => q.test(obj));\n};\nexport {\n  $and\n};\n", "import { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\nconst $or = (_, rhs, options) => {\n  assert(isArray(rhs), \"Invalid expression. $or expects value to be an Array\");\n  const queries = rhs.map((expr) => new Query(expr, options));\n  return (obj) => queries.some((q) => q.test(obj));\n};\nexport {\n  $or\n};\n", "import { assert, isArray } from \"../../../util\";\nimport { $or } from \"./or\";\nconst $nor = (_, rhs, options) => {\n  assert(\n    isArray(rhs),\n    \"Invalid expression. $nor expects value to be an array.\"\n  );\n  const f = $or(\"$or\", rhs, options);\n  return (obj) => !f(obj);\n};\nexport {\n  $nor\n};\n", "import { Query } from \"../../../query\";\nimport { normalize } from \"../../../util\";\nconst $not = (selector, rhs, options) => {\n  const criteria = {};\n  criteria[selector] = normalize(rhs);\n  const query = new Query(criteria, options);\n  return (obj) => !query.test(obj);\n};\nexport {\n  $not\n};\n", "import { OpType, useOperators } from \"../core\";\nimport * as booleanOperators from \"../operators/expression/boolean\";\nimport * as comparisonOperators from \"../operators/expression/comparison\";\nimport { $limit, $project, $skip, $sort } from \"../operators/pipeline\";\nimport * as projectionOperators from \"../operators/projection\";\nimport * as queryOperators from \"../operators/query\";\nuseOperators(OpType.EXPRESSION, {\n  ...booleanOperators,\n  ...comparisonOperators\n});\nuseOperators(OpType.PIPELINE, {\n  $project,\n  $skip,\n  $limit,\n  $sort\n});\nuseOperators(OpType.PROJECTION, projectionOperators);\nuseOperators(OpType.QUERY, queryOperators);\n", "export * from \"./addToSet\";\nexport * from \"./bit\";\nexport * from \"./currentDate\";\nexport * from \"./inc\";\nexport * from \"./max\";\nexport * from \"./min\";\nexport * from \"./mul\";\nexport * from \"./pop\";\nexport * from \"./pull\";\nexport * from \"./pullAll\";\nexport * from \"./push\";\nexport * from \"./rename\";\nexport * from \"./set\";\nexport * from \"./unset\";\n", "import { Context, initOptions } from \"../../core\";\nimport * as booleanOperators from \"../../operators/expression/boolean\";\nimport * as comparisonOperators from \"../../operators/expression/comparison\";\nimport * as queryOperators from \"../../operators/query\";\nimport { Query } from \"../../query\";\nimport {\n  assert,\n  cloneDeep,\n  isArray,\n  isDate,\n  isObject,\n  isRegExp,\n  resolve,\n  walk\n} from \"../../util\";\nconst UPDATE_OPTIONS = {\n  cloneMode: \"copy\",\n  queryOptions: initOptions({\n    context: Context.init().addQueryOps(queryOperators).addExpressionOps(booleanOperators).addExpressionOps(comparisonOperators)\n  })\n};\nconst clone = (mode, val) => {\n  switch (mode) {\n    case \"deep\":\n      return cloneDeep(val);\n    case \"copy\": {\n      if (isDate(val)) return new Date(val);\n      if (isArray(val)) return [...val];\n      if (isObject(val)) return { ...val };\n      if (isRegExp(val)) return new RegExp(val);\n      return val;\n    }\n    default:\n      return val;\n  }\n};\nconst FILTER_IDENT_RE = /^[a-z]+[a-zA-Z0-9]*$/;\nfunction tokenizePath(selector) {\n  if (!selector.includes(\".$\")) {\n    return [{ parent: selector, selector }, []];\n  }\n  const begin = selector.indexOf(\".$\");\n  const end = selector.indexOf(\"]\");\n  const parent = selector.substring(0, begin);\n  const child = selector.substring(begin + 3, end);\n  assert(\n    child === \"\" || FILTER_IDENT_RE.test(child),\n    \"The filter <identifier> must begin with a lowercase letter and contain only alphanumeric characters.\"\n  );\n  const rest = selector.substring(end + 2);\n  const [next, elems] = rest ? tokenizePath(rest) : [];\n  return [\n    { selector, parent, child: child || \"$\", next },\n    [child, ...elems || []].filter(Boolean)\n  ];\n}\nconst applyUpdate = (o, n, q, f, opts) => {\n  const { parent, child: c, next } = n;\n  if (!c) {\n    let b = false;\n    const g = (u, k) => b = Boolean(f(u, k)) || b;\n    walk(o, parent, g, opts);\n    return b;\n  }\n  const t = resolve(o, parent);\n  if (!isArray(t)) return false;\n  return t.map((e, i) => {\n    if (q[c] && !q[c].test({ [c]: e })) return false;\n    return next ? applyUpdate(e, next, q, f, opts) : f(t, i);\n  }).some(Boolean);\n};\nfunction walkExpression(expr, arrayFilter, options, callback) {\n  const res = [];\n  for (const [selector, val] of Object.entries(expr)) {\n    const [node, vars] = tokenizePath(selector);\n    if (!vars.length) {\n      if (callback(val, node, {})) res.push(node.parent);\n    } else {\n      const conditions = {};\n      arrayFilter.forEach((o) => {\n        Object.keys(o).forEach((k) => {\n          vars.forEach((w) => {\n            if (k === w || k.startsWith(w + \".\")) {\n              conditions[w] = conditions[w] || {};\n              Object.assign(conditions[w], { [k]: o[k] });\n            }\n          });\n        });\n      });\n      const queries = {};\n      for (const [k, condition] of Object.entries(conditions)) {\n        queries[k] = new Query(condition, options.queryOptions);\n      }\n      if (callback(val, node, queries)) res.push(node.parent);\n    }\n  }\n  return res;\n}\nexport {\n  UPDATE_OPTIONS,\n  applyUpdate,\n  clone,\n  tokenizePath,\n  walkExpression\n};\n", "import { has, intersection, isObject, unique } from \"../../util\";\nimport {\n  applyUpdate,\n  clone,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $addToSet = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    const args = { $each: [val] };\n    if (isObject(val) && has(val, \"$each\")) {\n      Object.assign(args, val);\n    }\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        const prev = o[k] ||= [];\n        const common = intersection([prev, args.$each]);\n        if (common.length === args.$each.length) return false;\n        o[k] = clone(options.cloneMode, unique(prev.concat(args.$each)));\n        return true;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $addToSet\n};\n", "import { assert, isNumber } from \"../../util\";\nimport {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst BIT_OPS = /* @__PURE__ */ new Set([\"and\", \"or\", \"xor\"]);\nconst $bit = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    const op = Object.keys(val);\n    assert(\n      op.length === 1 && BIT_OPS.has(op[0]),\n      `Invalid bit operator '${op[0]}'. Must be one of 'and', 'or', or 'xor'.`\n    );\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        let n = o[k];\n        const v = val[op[0]];\n        if (n !== void 0 && !(isNumber(n) && isNumber(v))) return false;\n        n = n || 0;\n        switch (op[0]) {\n          case \"and\":\n            o[k] = n & v;\n            break;\n          case \"or\":\n            o[k] = n | v;\n            break;\n          case \"xor\":\n            o[k] = n ^ v;\n            break;\n        }\n        return o[k] !== n;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $bit\n};\n", "import {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $currentDate = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  const now = Date.now();\n  return walkExpression(expr, arrayFilters, options, (_, node, queries) => {\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        o[k] = now;\n        return true;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $currentDate\n};\n", "import { assert, isNumber, resolve } from \"../../util\";\nimport { applyUpdate, UPDATE_OPTIONS, walkExpression } from \"./_internal\";\nconst $inc = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    if (!node.child) {\n      const n = resolve(obj, node.parent);\n      assert(\n        n === void 0 || isNumber(n),\n        `cannot apply $inc to a value of non-numeric type`\n      );\n    }\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        o[k] = (o[k] ||= 0) + val;\n        return true;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $inc\n};\n", "import { compare } from \"../../util\";\nimport {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $max = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        if (o[k] !== void 0 && compare(o[k], val) > -1) return false;\n        o[k] = val;\n        return true;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $max\n};\n", "import { compare } from \"../../util\";\nimport {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $min = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        if (o[k] !== void 0 && compare(o[k], val) < 1) return false;\n        o[k] = val;\n        return true;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $min\n};\n", "import {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $mul = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        const prev = o[k];\n        o[k] = o[k] === void 0 ? 0 : o[k] * val;\n        return o[k] !== prev;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $mul\n};\n", "import { assert, isArray } from \"../../util\";\nimport {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $pop = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    return applyUpdate(obj, node, queries, (o, k) => {\n      const arr = o[k];\n      assert(\n        isArray(arr),\n        `path '${node.selector}' contains an element of non-array type.`\n      );\n      if (!arr.length) return false;\n      if (val === -1) {\n        arr.splice(0, 1);\n      } else {\n        arr.pop();\n      }\n      return true;\n    });\n  });\n};\nexport {\n  $pop\n};\n", "import { Query } from \"../../query\";\nimport { isObject, isOperator } from \"../../util\";\nimport {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $pull = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    const wrap = !isObject(val) || Object.keys(val).some(isOperator);\n    const query = new Query(\n      wrap ? { k: val } : val,\n      options.queryOptions\n    );\n    const pred = wrap ? (v) => query.test({ k: v }) : (v) => query.test(v);\n    return applyUpdate(obj, node, queries, (o, k) => {\n      const prev = o[k];\n      const curr = new Array();\n      const found = prev.map((v) => {\n        const b = pred(v);\n        if (!b) curr.push(v);\n        return b;\n      }).some(Boolean);\n      if (!found) return false;\n      o[k] = curr;\n      return true;\n    });\n  });\n};\nexport {\n  $pull\n};\n", "import { UPDATE_OPTIONS } from \"./_internal\";\nimport { $pull } from \"./pull\";\nconst $pullAll = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  const pullExpr = {};\n  Object.entries(expr).forEach(([k, v]) => {\n    pullExpr[k] = { $in: v };\n  });\n  return $pull(obj, pullExpr, arrayFilters, options);\n};\nexport {\n  $pullAll\n};\n", "import { compare, has, isEqual, isNumber, isObject, resolve } from \"../../util\";\nimport {\n  applyUpdate,\n  clone,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst MODIFIERS = [\"$each\", \"$slice\", \"$sort\", \"$position\"];\nconst $push = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    const args = {\n      $each: [val]\n    };\n    if (isObject(val) && MODIFIERS.some((m) => has(val, m))) {\n      Object.assign(args, val);\n    }\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        const arr = o[k] ||= [];\n        const prev = arr.slice(0, args.$slice || arr.length);\n        const oldsize = arr.length;\n        const pos = isNumber(args.$position) ? args.$position : arr.length;\n        arr.splice(pos, 0, ...clone(options.cloneMode, args.$each));\n        if (args.$sort) {\n          const sortKey = isObject(args.$sort) ? Object.keys(args.$sort || {}).pop() : \"\";\n          const order = !sortKey ? args.$sort : args.$sort[sortKey];\n          const f = !sortKey ? (a) => a : (a) => resolve(a, sortKey);\n          arr.sort((a, b) => order * compare(f(a), f(b)));\n        }\n        if (isNumber(args.$slice)) {\n          if (args.$slice < 0) arr.splice(0, arr.length + args.$slice);\n          else arr.splice(args.$slice);\n        }\n        return oldsize != arr.length || !isEqual(prev, arr);\n      },\n      { descendArray: true, buildGraph: true }\n    );\n  });\n};\nexport {\n  $push\n};\n", "import { isEqual } from \"../../util\";\nimport {\n  applyUpdate,\n  clone,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nconst $set = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    return applyUpdate(\n      obj,\n      node,\n      queries,\n      (o, k) => {\n        if (isEqual(o[k], val)) return false;\n        o[k] = clone(options.cloneMode, val);\n        return true;\n      },\n      { buildGraph: true }\n    );\n  });\n};\nexport {\n  $set\n};\n", "import { has } from \"../../util\";\nimport {\n  applyUpdate,\n  UPDATE_OPTIONS,\n  walkExpression\n} from \"./_internal\";\nimport { $set } from \"./set\";\nconst $rename = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  const res = [];\n  const changed = walkExpression(expr, arrayFilters, options, (val, node, queries) => {\n    return applyUpdate(obj, node, queries, (o, k) => {\n      if (!has(o, k)) return false;\n      res.push(...$set(obj, { [val]: o[k] }, arrayFilters, options));\n      delete o[k];\n      return true;\n    });\n  });\n  return Array.from(new Set(changed.concat(res)));\n};\nexport {\n  $rename\n};\n", "import { has, isArray } from \"../../util\";\nimport { applyUpdate, UPDATE_OPTIONS, walkExpression } from \"./_internal\";\nconst $unset = (obj, expr, arrayFilters = [], options = UPDATE_OPTIONS) => {\n  return walkExpression(expr, arrayFilters, options, (_, node, queries) => {\n    return applyUpdate(obj, node, queries, (o, k) => {\n      if (!has(o, k)) return false;\n      if (isArray(o)) {\n        o[k] = null;\n      } else {\n        delete o[k];\n      }\n      return true;\n    });\n  });\n};\nexport {\n  $unset\n};\n", "import * as UPDATE_OPERATORS from \"./operators/update\";\nimport { UPDATE_OPTIONS } from \"./operators/update/_internal\";\nimport { Query } from \"./query\";\nimport { assert, has } from \"./util\";\nfunction createUpdater(defaultOptions) {\n  defaultOptions = defaultOptions ?? UPDATE_OPTIONS;\n  return (obj, expr, arrayFilters = [], condition = {}, options = defaultOptions) => {\n    const entry = Object.entries(expr);\n    assert(\n      entry.length === 1,\n      \"Update expression must contain only one operator.\"\n    );\n    const [op, args] = entry[0];\n    assert(\n      has(UPDATE_OPERATORS, op),\n      `Update operator '${op}' is not supported.`\n    );\n    const mutate = UPDATE_OPERATORS[op];\n    if (Object.keys(condition).length) {\n      const q = new Query(condition, options.queryOptions);\n      if (!q.test(obj)) return [];\n    }\n    return mutate(obj, args, arrayFilters, options);\n  };\n}\nconst update = createUpdater();\nconst updateObject = update;\nexport {\n  createUpdater,\n  update,\n  updateObject\n};\n", "import { Query } from \"mingo\";\nfunction match(item, selector) {\n  const query = new Query(selector);\n  return query.test(item);\n}\nexport {\n  match as default\n};\n", "function clone(value) {\n  if (typeof value === \"function\")\n    throw new Error(\"Cloning functions is not supported\");\n  if (value === null || typeof value !== \"object\")\n    return value;\n  if (value instanceof Date)\n    return new Date(value);\n  if (Array.isArray(value))\n    return value.map((item) => clone(item));\n  if (value instanceof Map) {\n    const result2 = /* @__PURE__ */ new Map();\n    value.forEach((currentValue, key) => {\n      result2.set(key, clone(currentValue));\n    });\n    return result2;\n  }\n  if (value instanceof Set) {\n    const result2 = /* @__PURE__ */ new Set();\n    value.forEach((currentValue) => {\n      result2.add(clone(currentValue));\n    });\n    return result2;\n  }\n  if (value instanceof RegExp)\n    return new RegExp(value);\n  const result = {};\n  for (const key in value) {\n    if (Object.hasOwnProperty.call(value, key)) {\n      result[key] = clone(value[key]);\n    }\n  }\n  return result;\n}\nfunction deepClone(object) {\n  if (typeof structuredClone === \"function\")\n    return structuredClone(object);\n  /* istanbul ignore next -- @preserve */\n  return clone(object);\n}\nexport {\n  clone,\n  deepClone as default\n};\n", "import { update } from \"mingo\";\nimport deepClone from \"./index19.mjs\";\nfunction modify(item, modifier) {\n  const hasOperators = Object.keys(modifier).some((key) => key.startsWith(\"$\"));\n  if (!hasOperators)\n    return modifier;\n  const clonedItem = deepClone(item);\n  update(clonedItem, modifier);\n  return clonedItem;\n}\nexport {\n  modify as default\n};\n", "function randomId() {\n  return Math.floor(Math.random() * 1e17).toString(16);\n}\nexport {\n  randomId as default\n};\n", "function serializeValue(value) {\n  if (value == null)\n    return null;\n  if (typeof value === \"string\")\n    return value;\n  if (typeof value === \"number\")\n    return value.toString();\n  if (typeof value === \"boolean\")\n    return value.toString();\n  if (value instanceof Date)\n    return value.toISOString();\n  return JSON.stringify(value);\n}\nexport {\n  serializeValue as default\n};\n", "function createSignal(reactivityAdapter, initialValue, isEqual = Object.is) {\n  let value = initialValue;\n  const dependency = reactivityAdapter == null ? void 0 : reactivityAdapter.create();\n  const isInReactiveScope = () => {\n    if (!(reactivityAdapter == null ? void 0 : reactivityAdapter.isInScope))\n      return true;\n    return reactivityAdapter.isInScope();\n  };\n  const signal = {\n    get() {\n      if (dependency && isInReactiveScope())\n        dependency.depend();\n      return value;\n    },\n    set(newValue) {\n      if (isEqual(value, newValue))\n        return;\n      value = newValue;\n      if (dependency)\n        dependency.notify();\n    }\n  };\n  return signal;\n}\nexport {\n  createSignal as default\n};\n", "function intersection(...arrays) {\n  if (arrays.length === 0)\n    return [];\n  return [...new Set(arrays.reduce((a, b) => a.filter((c) => b.includes(c))))];\n}\nexport {\n  intersection as default\n};\n", "import intersection from \"./index27.mjs\";\nfunction getMergedIndexInfo(indexProviders, selector) {\n  return indexProviders.reduce((memo, indexProvider) => {\n    const info = indexProvider.query(selector);\n    if (!info.matched)\n      return memo;\n    const optimizedSelector = info.keepSelector ? memo.optimizedSelector : Object.fromEntries(Object.entries(memo.optimizedSelector).filter(([key]) => !info.fields.includes(key)));\n    return {\n      matched: true,\n      positions: [...new Set(memo.matched ? intersection(memo.positions, info.positions) : info.positions)],\n      optimizedSelector\n    };\n  }, {\n    matched: false,\n    positions: [],\n    optimizedSelector: { ...selector }\n  });\n}\nfunction getIndexInfo(indexProviders, selector) {\n  if (selector == null || Object.keys(selector).length <= 0) {\n    return { matched: false, positions: [], optimizedSelector: selector };\n  }\n  const { $and, $or, ...rest } = selector;\n  const flatInfo = getMergedIndexInfo(indexProviders, rest);\n  let { matched, positions } = flatInfo;\n  const newSelector = flatInfo.optimizedSelector;\n  if (Array.isArray($and)) {\n    const $andNew = [];\n    for (const sel of $and) {\n      const { matched: selMatched, positions: selPositions, optimizedSelector } = getIndexInfo(indexProviders, sel);\n      if (selMatched) {\n        positions = matched ? intersection(positions, selPositions) : selPositions;\n        matched = true;\n        if (Object.keys(optimizedSelector).length > 0) {\n          $andNew.push(optimizedSelector);\n        }\n      } else {\n        $andNew.push(sel);\n      }\n    }\n    if ($andNew.length > 0)\n      newSelector.$and = $andNew;\n  }\n  if (Array.isArray($or)) {\n    const $orNew = [];\n    for (const sel of $or) {\n      const { matched: selMatched, positions: selPositions, optimizedSelector } = getIndexInfo(indexProviders, sel);\n      if (selMatched) {\n        positions = [.../* @__PURE__ */ new Set([...positions, ...selPositions])];\n        matched = true;\n        if (Object.keys(optimizedSelector).length > 0) {\n          $orNew.push(optimizedSelector);\n        }\n      } else {\n        $orNew.push(sel);\n      }\n    }\n    if ($orNew.length > 0)\n      newSelector.$or = $orNew;\n  }\n  return {\n    matched,\n    positions: positions || [],\n    optimizedSelector: newSelector\n  };\n}\nexport {\n  getIndexInfo as default,\n  getMergedIndexInfo\n};\n", "function createIndexProvider(definition) {\n  return definition;\n}\nexport {\n  createIndexProvider as default\n};\n", "const expressionKeys = /* @__PURE__ */ new Set([\n  \"$eq\",\n  \"$gt\",\n  \"$gte\",\n  \"$lt\",\n  \"$lte\",\n  \"$in\",\n  \"$nin\",\n  \"$ne\",\n  \"$exists\",\n  \"$not\",\n  \"$expr\",\n  \"$jsonSchema\",\n  \"$mod\",\n  \"$regex\",\n  \"$options\",\n  \"$text\",\n  \"$where\",\n  \"$all\",\n  \"$elemMatch\",\n  \"$size\",\n  \"$bitsAllClear\",\n  \"$bitsAllSet\",\n  \"$bitsAnyClear\",\n  \"$bitsAnySet\"\n]);\nfunction isFieldExpression(expression) {\n  if (typeof expression !== \"object\" || expression == null) {\n    return false;\n  }\n  const keys = Object.keys(expression);\n  if (keys.length === 0) {\n    return false;\n  }\n  const hasInvalidKeys = keys.some((key) => !expressionKeys.has(key));\n  if (hasInvalidKeys)\n    return false;\n  const hasValidKeys = keys.every((key) => expressionKeys.has(key));\n  return hasValidKeys;\n}\nexport {\n  isFieldExpression as default\n};\n", "import isFieldExpression from \"./index29.mjs\";\nimport serializeValue from \"./index20.mjs\";\nfunction getMatchingKeys(field, selector) {\n  const result = { include: null, exclude: null };\n  const fieldSelector = selector[field];\n  if (fieldSelector instanceof RegExp)\n    return result;\n  if (fieldSelector == null)\n    return result;\n  if (isFieldExpression(fieldSelector)) {\n    if (fieldSelector.$ne != null) {\n      result.exclude = [serializeValue(fieldSelector.$ne)];\n      return result;\n    }\n    if (Array.isArray(fieldSelector.$in) && fieldSelector.$in.length > 0) {\n      result.include = fieldSelector.$in.map(serializeValue);\n      return result;\n    }\n    if (Array.isArray(fieldSelector.$nin) && fieldSelector.$nin.length > 0) {\n      result.exclude = fieldSelector.$nin.map(serializeValue);\n      return result;\n    }\n    return { include: null, exclude: null };\n  }\n  result.include = [serializeValue(fieldSelector)];\n  return result;\n}\nexport {\n  getMatchingKeys as default\n};\n", "import createIndexProvider from \"./index6.mjs\";\nimport get from \"./index24.mjs\";\nimport getMatchingKeys from \"./index28.mjs\";\nimport serializeValue from \"./index20.mjs\";\nfunction createExternalIndex(field, index) {\n  return createIndexProvider({\n    query(selector) {\n      if (!Object.hasOwnProperty.call(selector, field)) {\n        return { matched: false };\n      }\n      const fieldSelector = selector[field];\n      const filteresForNull = fieldSelector == null || fieldSelector.$exists === false;\n      const keys = filteresForNull ? { include: null, exclude: [...index.keys()].filter((key) => key != null) } : getMatchingKeys(field, selector);\n      if (keys.include == null && keys.exclude == null)\n        return { matched: false };\n      let includedPositions = [];\n      if (keys.include == null) {\n        for (const set of index.values()) {\n          for (const pos of set) {\n            includedPositions.push(pos);\n          }\n        }\n      } else {\n        for (const key of keys.include) {\n          const posSet = index.get(key);\n          if (posSet) {\n            for (const pos of posSet) {\n              includedPositions.push(pos);\n            }\n          }\n        }\n      }\n      if (keys.exclude != null) {\n        const excludeSet = /* @__PURE__ */ new Set();\n        for (const key of keys.exclude) {\n          const posSet = index.get(key);\n          if (posSet) {\n            for (const pos of posSet) {\n              excludeSet.add(pos);\n            }\n          }\n        }\n        includedPositions = includedPositions.filter((pos) => !excludeSet.has(pos));\n      }\n      return {\n        matched: true,\n        positions: includedPositions,\n        fields: [field],\n        keepSelector: filteresForNull\n      };\n    },\n    rebuild() {\n    }\n  });\n}\nfunction createIndex(field) {\n  const index = /* @__PURE__ */ new Map();\n  return {\n    ...createExternalIndex(field, index),\n    rebuild(items) {\n      index.clear();\n      items.forEach((item, i) => {\n        const value = serializeValue(get(item, field));\n        const current = index.get(value) || /* @__PURE__ */ new Set();\n        current.add(i);\n        index.set(value, current);\n      });\n    }\n  };\n}\nexport {\n  createExternalIndex,\n  createIndex as default\n};\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nimport EventEmitter from \"./index13.mjs\";\nimport match from \"./index18.mjs\";\nimport modify from \"./index11.mjs\";\nimport isEqual from \"./index10.mjs\";\nimport randomId from \"./index12.mjs\";\nimport deepClone from \"./index19.mjs\";\nimport serializeValue from \"./index20.mjs\";\nimport createSignal from \"./index21.mjs\";\nimport Cursor from \"./index2.mjs\";\nimport getIndexInfo from \"./index22.mjs\";\nimport { createExternalIndex } from \"./index14.mjs\";\nimport { default as default2 } from \"./index14.mjs\";\nfunction hasPendingUpdates(pendingUpdates) {\n  return pendingUpdates.added.length > 0 || pendingUpdates.modified.length > 0 || pendingUpdates.removed.length > 0;\n}\nfunction applyUpdates(currentItems, { added, modified, removed }) {\n  const items = [...currentItems];\n  added.forEach((item) => {\n    items.push(item);\n  });\n  modified.forEach((item) => {\n    const index = items.findIndex(({ id }) => id === item.id);\n    if (index === -1)\n      return;\n    items[index] = item;\n  });\n  removed.forEach((item) => {\n    const index = items.findIndex(({ id }) => id === item.id);\n    if (index === -1)\n      return;\n    items.splice(index, 1);\n  });\n  return items;\n}\nconst _Collection = class _Collection extends EventEmitter {\n  /**\n   * Initializes a new instance of the `Collection` class with optional configuration.\n   * Sets up memory, persistence, reactivity, and indices as specified in the options.\n   * @template T - The type of the items stored in the collection.\n   * @template I - The type of the unique identifier for the items.\n   * @template U - The transformed item type after applying transformations (default is T).\n   * @param options - Optional configuration for the collection.\n   * @param options.name - An optional name for the collection.\n   * @param options.memory - The in-memory adapter for storing items.\n   * @param options.reactivity - The reactivity adapter for observing changes in the collection.\n   * @param options.transform - A transformation function to apply to items when retrieving them.\n   * @param options.persistence - The persistence adapter for saving and loading items.\n   * @param options.indices - An array of index providers for optimized querying.\n   * @param options.enableDebugMode - A boolean to enable or disable debug mode.\n   * @param options.fieldTracking - A boolean to enable or disable field tracking by default.\n   */\n  constructor(options) {\n    super();\n    __publicField(this, \"name\");\n    __publicField(this, \"options\");\n    __publicField(this, \"persistenceAdapter\", null);\n    __publicField(this, \"isPullingSignal\");\n    __publicField(this, \"isPushingSignal\");\n    __publicField(this, \"indexProviders\", []);\n    __publicField(this, \"indicesOutdated\", false);\n    __publicField(this, \"idIndex\", /* @__PURE__ */ new Map());\n    __publicField(this, \"debugMode\");\n    __publicField(this, \"batchOperationInProgress\", false);\n    __publicField(this, \"isDisposed\", false);\n    __publicField(this, \"postBatchCallbacks\", /* @__PURE__ */ new Set());\n    __publicField(this, \"fieldTracking\", false);\n    __publicField(this, \"persistenceReadyPromise\");\n    _Collection.collections.push(this);\n    this.name = (options == null ? void 0 : options.name) ?? `${this.constructor.name}-${randomId()}`;\n    this.options = {\n      memory: [],\n      ...options\n    };\n    this.fieldTracking = this.options.fieldTracking ?? _Collection.fieldTracking;\n    this.debugMode = this.options.enableDebugMode ?? _Collection.debugMode;\n    this.indexProviders = [\n      createExternalIndex(\"id\", this.idIndex),\n      ...this.options.indices || []\n    ];\n    this.rebuildIndices();\n    this.isPullingSignal = createSignal(this.options.reactivity, !!(options == null ? void 0 : options.persistence));\n    this.isPushingSignal = createSignal(this.options.reactivity, false);\n    this.on(\"persistence.pullStarted\", () => {\n      this.isPullingSignal.set(true);\n    });\n    this.on(\"persistence.pullCompleted\", () => {\n      this.isPullingSignal.set(false);\n    });\n    this.on(\"persistence.pushStarted\", () => {\n      this.isPushingSignal.set(true);\n    });\n    this.on(\"persistence.pushCompleted\", () => {\n      this.isPushingSignal.set(false);\n    });\n    this.persistenceAdapter = this.options.persistence ?? null;\n    if (this.persistenceAdapter) {\n      let ongoingSaves = 0;\n      let isInitialized = false;\n      const pendingUpdates = { added: [], modified: [], removed: [] };\n      const loadPersistentData = async (data) => {\n        if (!this.persistenceAdapter)\n          throw new Error(\"Persistence adapter not found\");\n        this.emit(\"persistence.pullStarted\");\n        const { items, changes } = data ?? await this.persistenceAdapter.load();\n        if (items) {\n          if (ongoingSaves > 0)\n            return;\n          this.memory().splice(0, this.memoryArray().length, ...items);\n          this.idIndex.clear();\n          this.memory().map((item, index) => {\n            this.idIndex.set(serializeValue(item.id), /* @__PURE__ */ new Set([index]));\n          });\n        } else if (changes) {\n          changes.added.forEach((item) => {\n            const index = this.memory().findIndex((document) => document.id === item.id);\n            if (index !== -1) {\n              this.memory().splice(index, 1, item);\n              return;\n            }\n            this.memory().push(item);\n            const itemIndex = this.memory().findIndex((document) => document === item);\n            this.idIndex.set(serializeValue(item.id), /* @__PURE__ */ new Set([itemIndex]));\n          });\n          changes.modified.forEach((item) => {\n            const index = this.memory().findIndex((document) => document.id === item.id);\n            if (index === -1)\n              throw new Error(\"Cannot resolve index for item\");\n            this.memory().splice(index, 1, item);\n          });\n          changes.removed.forEach((item) => {\n            const index = this.memory().findIndex((document) => document.id === item.id);\n            if (index === -1)\n              throw new Error(\"Cannot resolve index for item\");\n            this.memory().splice(index, 1);\n          });\n        }\n        this.rebuildIndices();\n        this.emit(\"persistence.received\");\n        setTimeout(() => this.emit(\"persistence.pullCompleted\"), 0);\n      };\n      const saveQueue = {\n        added: [],\n        modified: [],\n        removed: []\n      };\n      let isFlushing = false;\n      const flushQueue = () => {\n        if (!this.persistenceAdapter)\n          throw new Error(\"Persistence adapter not found\");\n        if (ongoingSaves <= 0)\n          this.emit(\"persistence.pushStarted\");\n        if (isFlushing)\n          return;\n        if (!hasPendingUpdates(saveQueue))\n          return;\n        isFlushing = true;\n        ongoingSaves += 1;\n        const currentItems = this.memoryArray();\n        const changes = { ...saveQueue };\n        saveQueue.added = [];\n        saveQueue.modified = [];\n        saveQueue.removed = [];\n        this.persistenceAdapter.save(currentItems, changes).then(() => {\n          this.emit(\"persistence.transmitted\");\n        }).catch((error) => {\n          this.emit(\"persistence.error\", error instanceof Error ? error : new Error(error));\n        }).finally(() => {\n          ongoingSaves -= 1;\n          isFlushing = false;\n          flushQueue();\n          if (ongoingSaves <= 0)\n            this.emit(\"persistence.pushCompleted\");\n        });\n      };\n      this.on(\"added\", (item) => {\n        if (!isInitialized) {\n          pendingUpdates.added.push(item);\n          return;\n        }\n        saveQueue.added.push(item);\n        flushQueue();\n      });\n      this.on(\"changed\", (item) => {\n        if (!isInitialized) {\n          pendingUpdates.modified.push(item);\n          return;\n        }\n        saveQueue.modified.push(item);\n        flushQueue();\n      });\n      this.on(\"removed\", (item) => {\n        if (!isInitialized) {\n          pendingUpdates.removed.push(item);\n          return;\n        }\n        saveQueue.removed.push(item);\n        flushQueue();\n      });\n      this.persistenceAdapter.register((data) => loadPersistentData(data)).then(async () => {\n        if (!this.persistenceAdapter)\n          throw new Error(\"Persistence adapter not found\");\n        let currentItems = this.memoryArray();\n        await loadPersistentData();\n        while (hasPendingUpdates(pendingUpdates)) {\n          const added = pendingUpdates.added.splice(0);\n          const modified = pendingUpdates.modified.splice(0);\n          const removed = pendingUpdates.removed.splice(0);\n          currentItems = applyUpdates(this.memoryArray(), { added, modified, removed });\n          await this.persistenceAdapter.save(currentItems, { added, modified, removed }).then(() => {\n            this.emit(\"persistence.transmitted\");\n          });\n        }\n        await loadPersistentData();\n        isInitialized = true;\n        setTimeout(() => this.emit(\"persistence.init\"), 0);\n      }).catch((error) => {\n        this.emit(\"persistence.error\", error instanceof Error ? error : new Error(error));\n      });\n    }\n    this.persistenceReadyPromise = new Promise((resolve, reject) => {\n      if (!this.persistenceAdapter)\n        return resolve();\n      this.once(\"persistence.init\", resolve);\n      this.once(\"persistence.error\", reject);\n    });\n    _Collection.onCreationCallbacks.forEach((callback) => callback(this));\n  }\n  static getCollections() {\n    return _Collection.collections;\n  }\n  static onCreation(callback) {\n    _Collection.onCreationCallbacks.push(callback);\n  }\n  static onDispose(callback) {\n    _Collection.onDisposeCallbacks.push(callback);\n  }\n  /**\n   * Executes a batch operation, allowing multiple modifications to the collection\n   * while deferring index rebuilding until all operations in the batch are completed.\n   * This improves performance by avoiding repetitive index recalculations and\n   * provides atomicity for the batch of operations.\n   * @param callback - The batch operation to execute.\n   */\n  static batch(callback) {\n    _Collection.batchOperationInProgress = true;\n    _Collection.collections.reduce((memo, collection) => () => collection.batch(() => memo()), callback)();\n    _Collection.batchOperationInProgress = false;\n  }\n  /**\n   * Checks whether the collection is currently performing a pull operation\n   * ⚡️ this function is reactive!\n   * (loading data from the persistence adapter).\n   * @returns A boolean indicating if the collection is in the process of pulling data.\n   */\n  isPulling() {\n    return this.isPullingSignal.get() ?? false;\n  }\n  /**\n   * Checks whether the collection is currently performing a push operation\n   * ⚡️ this function is reactive!\n   * (saving data to the persistence adapter).\n   * @returns A boolean indicating if the collection is in the process of pushing data.\n   */\n  isPushing() {\n    return this.isPushingSignal.get() ?? false;\n  }\n  /**\n   * Checks whether the collection is currently performing either a pull or push operation,\n   * ⚡️ this function is reactive!\n   * indicating that it is loading or saving data.\n   * @returns A boolean indicating if the collection is in the process of loading or saving data.\n   */\n  isLoading() {\n    const isPulling = this.isPulling();\n    const isPushing = this.isPushing();\n    return isPulling || isPushing;\n  }\n  /**\n   * Retrieves the current debug mode status of the collection.\n   * @returns A boolean indicating whether debug mode is enabled for the collection.\n   */\n  getDebugMode() {\n    return this.debugMode;\n  }\n  /**\n   * Enables or disables debug mode for the collection.\n   * When debug mode is enabled, additional debugging information and events are emitted.\n   * @param enable - A boolean indicating whether to enable (`true`) or disable (`false`) debug mode.\n   */\n  setDebugMode(enable) {\n    this.debugMode = enable;\n  }\n  /**\n   * Enables or disables field tracking for the collection.\n   * @param enable - A boolean indicating whether to enable (`true`) or disable (`false`) field tracking.\n   */\n  setFieldTracking(enable) {\n    this.fieldTracking = enable;\n  }\n  /**\n   * Resolves when the persistence adapter finished initializing\n   * and the collection is ready to be used.\n   * @returns A promise that resolves when the collection is ready.\n   * @example\n   * ```ts\n   * const collection = new Collection({\n   *   persistence: // ...\n   * })\n   * await collection.isReady()\n   *\n   * collection.insert({ name: 'Item 1' })\n   */\n  async isReady() {\n    return this.persistenceReadyPromise;\n  }\n  profile(fn, measureFunction) {\n    if (!this.debugMode)\n      return fn();\n    const startTime = performance.now();\n    const result = fn();\n    const endTime = performance.now();\n    measureFunction(endTime - startTime);\n    return result;\n  }\n  executeInDebugMode(fn) {\n    if (!this.debugMode)\n      return;\n    const callstack = new Error().stack || \"\";\n    fn(callstack);\n  }\n  rebuildIndices() {\n    this.indicesOutdated = true;\n    if (this.batchOperationInProgress)\n      return;\n    this.rebuildAllIndices();\n  }\n  rebuildAllIndices() {\n    this.idIndex.clear();\n    this.memory().map((item, index) => {\n      this.idIndex.set(serializeValue(item.id), /* @__PURE__ */ new Set([index]));\n    });\n    this.indexProviders.forEach((index) => index.rebuild(this.memoryArray()));\n    this.indicesOutdated = false;\n  }\n  getIndexInfo(selector) {\n    if (selector != null && Object.keys(selector).length === 1 && \"id\" in selector && typeof selector.id !== \"object\") {\n      return {\n        matched: true,\n        positions: [...this.idIndex.get(serializeValue(selector.id)) || []],\n        optimizedSelector: {}\n      };\n    }\n    if (selector == null) {\n      return {\n        matched: false,\n        positions: [],\n        optimizedSelector: {}\n      };\n    }\n    if (this.indicesOutdated) {\n      return {\n        matched: false,\n        positions: [],\n        optimizedSelector: selector\n      };\n    }\n    return getIndexInfo(this.indexProviders, selector);\n  }\n  getItemAndIndex(selector) {\n    const memory = this.memoryArray();\n    const indexInfo = this.getIndexInfo(selector);\n    const items = indexInfo.matched ? indexInfo.positions.map((index2) => memory[index2]) : memory;\n    const item = items.find((document) => match(document, selector));\n    const foundInIndex = indexInfo.matched && indexInfo.positions.find((itemIndex) => memory[itemIndex] === item);\n    const index = foundInIndex || memory.findIndex((document) => document === item);\n    if (item == null)\n      return { item: null, index: -1 };\n    if (index === -1)\n      throw new Error(\"Cannot resolve index for item\");\n    return { item, index };\n  }\n  deleteFromIdIndex(id, index) {\n    this.idIndex.delete(serializeValue(id));\n    if (!this.batchOperationInProgress)\n      return;\n    this.idIndex.forEach(([currenIndex], key) => {\n      if (currenIndex > index) {\n        this.idIndex.set(key, /* @__PURE__ */ new Set([currenIndex - 1]));\n      }\n    });\n  }\n  memory() {\n    return this.options.memory;\n  }\n  memoryArray() {\n    return this.memory().map((item) => item);\n  }\n  transform(item) {\n    if (!this.options.transform)\n      return item;\n    return this.options.transform(item);\n  }\n  getItems(selector) {\n    return this.profile(() => {\n      const indexInfo = this.getIndexInfo(selector);\n      const matchItems = (item) => {\n        if (indexInfo.optimizedSelector == null)\n          return true;\n        if (Object.keys(indexInfo.optimizedSelector).length <= 0)\n          return true;\n        const matches = match(item, indexInfo.optimizedSelector);\n        return matches;\n      };\n      this.emit(\"getItems\", selector);\n      const memory = this.memoryArray();\n      if (!indexInfo.matched) {\n        if (isEqual(selector, {}))\n          return memory;\n        return memory.filter(matchItems);\n      }\n      const items = indexInfo.positions.map((index) => memory[index]);\n      if (isEqual(indexInfo.optimizedSelector, {}))\n        return items;\n      return items.filter(matchItems);\n    }, (measuredTime) => this.executeInDebugMode((callstack) => this.emit(\"_debug.getItems\", callstack, selector, measuredTime)));\n  }\n  /**\n   * Disposes the collection, unregisters persistence adapters, clears memory, and\n   * cleans up all resources used by the collection.\n   * @returns A promise that resolves when the collection is disposed.\n   */\n  async dispose() {\n    var _a;\n    if ((_a = this.persistenceAdapter) == null ? void 0 : _a.unregister)\n      await this.persistenceAdapter.unregister();\n    this.persistenceAdapter = null;\n    this.memory().map(() => this.memory().pop());\n    this.idIndex.clear();\n    this.indexProviders = [];\n    this.isDisposed = true;\n    this.removeAllListeners();\n    _Collection.collections = _Collection.collections.filter((collection) => collection !== this);\n    _Collection.onDisposeCallbacks.forEach((callback) => callback(this));\n  }\n  /**\n   * Finds multiple items in the collection based on a selector and optional options.\n   * Returns a cursor for reactive data queries.\n   * @template O - The options type for the find operation.\n   * @param [selector] - The criteria to select items.\n   * @param [options] - Options for the find operation, such as limit and sort.\n   * @returns A cursor to fetch and observe the matching items.\n   */\n  find(selector, options) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (selector !== void 0 && (!selector || typeof selector !== \"object\"))\n      throw new Error(\"Invalid selector\");\n    const cursor = new Cursor(() => this.getItems(selector), {\n      reactive: this.options.reactivity,\n      fieldTracking: this.fieldTracking,\n      ...options,\n      transform: this.transform.bind(this),\n      bindEvents: (requery) => {\n        const handleRequery = () => {\n          if (this.batchOperationInProgress) {\n            this.postBatchCallbacks.add(requery);\n            return;\n          }\n          requery();\n        };\n        this.addListener(\"persistence.received\", handleRequery);\n        this.addListener(\"added\", handleRequery);\n        this.addListener(\"changed\", handleRequery);\n        this.addListener(\"removed\", handleRequery);\n        this.emit(\"observer.created\", selector, options);\n        return () => {\n          this.removeListener(\"persistence.received\", handleRequery);\n          this.removeListener(\"added\", handleRequery);\n          this.removeListener(\"changed\", handleRequery);\n          this.removeListener(\"removed\", handleRequery);\n          this.emit(\"observer.disposed\", selector, options);\n        };\n      }\n    });\n    this.emit(\"find\", selector, options, cursor);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.find\", callstack, selector, options, cursor));\n    return cursor;\n  }\n  /**\n   * Finds a single item in the collection based on a selector and optional options.\n   * ⚡️ this function is reactive!\n   * Returns the found item or undefined if no item matches.\n   * @template O - The options type for the find operation.\n   * @param selector - The criteria to select the item.\n   * @param [options] - Options for the find operation, such as projection.\n   * @returns The found item or `undefined`.\n   */\n  findOne(selector, options) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    const cursor = this.find(selector, {\n      limit: 1,\n      ...options\n    });\n    const returnValue = cursor.fetch()[0] || void 0;\n    this.emit(\"findOne\", selector, options, returnValue);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.findOne\", callstack, selector, options, returnValue));\n    return returnValue;\n  }\n  /**\n   * Performs a batch operation, deferring index rebuilds and allowing multiple\n   * modifications to be made atomically. Executes any post-batch callbacks afterwards.\n   * @param callback - The batch operation to execute.\n   */\n  batch(callback) {\n    this.batchOperationInProgress = true;\n    callback();\n    this.batchOperationInProgress = false;\n    this.rebuildAllIndices();\n    this.postBatchCallbacks.forEach((callback_) => callback_());\n    this.postBatchCallbacks.clear();\n  }\n  /**\n   * Inserts a single item into the collection. Generates a unique ID if not provided.\n   * @param item - The item to insert.\n   * @returns The ID of the inserted item.\n   * @throws {Error} If the collection is disposed or the item has an invalid ID.\n   */\n  insert(item) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (!item)\n      throw new Error(\"Invalid item\");\n    const primaryKeyGenerator = this.options.primaryKeyGenerator ?? randomId;\n    const newItem = { id: primaryKeyGenerator(item), ...item };\n    this.emit(\"validate\", newItem);\n    if (this.idIndex.has(serializeValue(newItem.id)))\n      throw new Error(\"Item with same id already exists\");\n    this.memory().push(newItem);\n    const itemIndex = this.memory().findIndex((document) => document === newItem);\n    this.idIndex.set(serializeValue(newItem.id), /* @__PURE__ */ new Set([itemIndex]));\n    this.rebuildIndices();\n    this.emit(\"added\", newItem);\n    this.emit(\"insert\", newItem);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.insert\", callstack, newItem));\n    return newItem.id;\n  }\n  /**\n   * Inserts multiple items into the collection. Generates unique IDs for items if not provided.\n   * @param items - The items to insert.\n   * @returns An array of IDs of the inserted items.\n   * @throws {Error} If the collection is disposed or the items are invalid.\n   */\n  insertMany(items) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (!items)\n      throw new Error(\"Invalid items\");\n    if (items.length === 0) {\n      return [];\n    }\n    const ids = [];\n    this.batch(() => {\n      items.forEach((item) => {\n        ids.push(this.insert(item));\n      });\n    });\n    return ids;\n  }\n  /**\n   * Updates a single item in the collection that matches the given selector.\n   * @param selector - The criteria to select the item to update.\n   * @param modifier - The modifications to apply to the item.\n   * @param [options] - Optional settings for the update operation.\n   * @param [options.upsert] - If `true`, creates a new item if no item matches the selector.\n   * @returns The number of items updated (0 or 1).\n   * @throws {Error} If the collection is disposed or invalid arguments are provided.\n   */\n  updateOne(selector, modifier, options) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (!selector)\n      throw new Error(\"Invalid selector\");\n    if (!modifier)\n      throw new Error(\"Invalid modifier\");\n    const { $setOnInsert, ...restModifier } = modifier;\n    const { item, index } = this.getItemAndIndex(selector);\n    if (item == null) {\n      if (options == null ? void 0 : options.upsert) {\n        const newItem = modify({}, {\n          ...restModifier,\n          $set: {\n            ...$setOnInsert,\n            ...restModifier.$set\n          }\n        });\n        if (newItem.id != null && this.getItemAndIndex({ id: newItem.id }).item != null) {\n          throw new Error(\"Item with same id already exists\");\n        }\n        this.insert(newItem);\n      }\n    } else {\n      const modifiedItem = modify(deepClone(item), restModifier);\n      if (item.id !== modifiedItem.id && this.getItemAndIndex({ id: modifiedItem.id }).item != null) {\n        throw new Error(\"Item with same id already exists\");\n      }\n      this.emit(\"validate\", modifiedItem);\n      this.memory().splice(index, 1, modifiedItem);\n      this.rebuildIndices();\n      this.emit(\"changed\", modifiedItem, restModifier);\n    }\n    this.emit(\"updateOne\", selector, modifier);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.updateOne\", callstack, selector, modifier));\n    if (item == null && !(options == null ? void 0 : options.upsert))\n      return 0;\n    return 1;\n  }\n  /**\n   * Updates multiple items in the collection that match the given selector.\n   * @param selector - The criteria to select the items to update.\n   * @param modifier - The modifications to apply to the items.\n   * @param [options] - Optional settings for the update operation.\n   * @param [options.upsert] - If `true`, creates new items if no items match the selector.\n   * @returns The number of items updated.\n   * @throws {Error} If the collection is disposed or invalid arguments are provided.\n   */\n  updateMany(selector, modifier, options) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (!selector)\n      throw new Error(\"Invalid selector\");\n    if (!modifier)\n      throw new Error(\"Invalid modifier\");\n    const { $setOnInsert, ...restModifier } = modifier;\n    const items = this.getItems(selector);\n    if (items.length === 0 && (options == null ? void 0 : options.upsert)) {\n      const newItem = modify({}, {\n        ...restModifier,\n        $set: {\n          ...$setOnInsert,\n          ...restModifier.$set\n        }\n      });\n      if (newItem.id != null && this.getItemAndIndex({ id: newItem.id }).item != null) {\n        throw new Error(\"Item with same id already exists\");\n      }\n      this.insert(newItem);\n    }\n    const changes = items.map((item) => {\n      const { index } = this.getItemAndIndex({ id: item.id });\n      if (index === -1)\n        throw new Error(`Cannot resolve index for item with id '${item.id}'`);\n      const modifiedItem = modify(deepClone(item), restModifier);\n      if (item.id !== modifiedItem.id && this.getItemAndIndex({ id: modifiedItem.id }).item != null) {\n        throw new Error(`Item with same id '${modifiedItem.id}' already exists`);\n      }\n      this.emit(\"validate\", modifiedItem);\n      return {\n        item: modifiedItem,\n        index\n      };\n    });\n    changes.forEach(({ item, index }) => {\n      this.memory().splice(index, 1, item);\n    });\n    this.rebuildIndices();\n    changes.forEach(({ item }) => {\n      this.emit(\"changed\", item, restModifier);\n    });\n    this.emit(\"updateMany\", selector, modifier);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.updateMany\", callstack, selector, modifier));\n    return changes.length === 0 && (options == null ? void 0 : options.upsert) ? 1 : changes.length;\n  }\n  /**\n   * Replaces a single item in the collection that matches the given selector.\n   * @param selector - The criteria to select the item to replace.\n   * @param replacement - The item to replace the selected item with.\n   * @param [options] - Optional settings for the replace operation.\n   * @param [options.upsert] - If `true`, creates a new item if no item matches the selector.\n   * @returns The number of items replaced (0 or 1).\n   * @throws {Error} If the collection is disposed or invalid arguments are provided.\n   */\n  replaceOne(selector, replacement, options) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (!selector)\n      throw new Error(\"Invalid selector\");\n    const { item, index } = this.getItemAndIndex(selector);\n    if (item == null) {\n      if (options == null ? void 0 : options.upsert) {\n        if (replacement.id != null && this.getItemAndIndex({ id: replacement.id }).item != null) {\n          throw new Error(\"Item with same id already exists\");\n        }\n        this.insert(replacement);\n      }\n    } else {\n      if (item.id !== replacement.id && this.getItemAndIndex({ id: replacement.id }).item != null) {\n        throw new Error(\"Item with same id already exists\");\n      }\n      const modifiedItem = { id: item.id, ...replacement };\n      this.emit(\"validate\", modifiedItem);\n      this.memory().splice(index, 1, modifiedItem);\n      this.rebuildIndices();\n      this.emit(\"changed\", modifiedItem, replacement);\n    }\n    this.emit(\"replaceOne\", selector, replacement);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.replaceOne\", callstack, selector, replacement));\n    if (item == null && !(options == null ? void 0 : options.upsert))\n      return 0;\n    return 1;\n  }\n  /**\n   * Removes a single item from the collection that matches the given selector.\n   * @param selector - The criteria to select the item to remove.\n   * @returns The number of items removed (0 or 1).\n   * @throws {Error} If the collection is disposed or invalid arguments are provided.\n   */\n  removeOne(selector) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (!selector)\n      throw new Error(\"Invalid selector\");\n    const { item, index } = this.getItemAndIndex(selector);\n    if (item != null) {\n      this.memory().splice(index, 1);\n      this.deleteFromIdIndex(item.id, index);\n      this.rebuildIndices();\n      this.emit(\"removed\", item);\n    }\n    this.emit(\"removeOne\", selector);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.removeOne\", callstack, selector));\n    return item == null ? 0 : 1;\n  }\n  /**\n   * Removes multiple items from the collection that match the given selector.\n   * @param selector - The criteria to select the items to remove.\n   * @returns The number of items removed.\n   * @throws {Error} If the collection is disposed or invalid arguments are provided.\n   */\n  removeMany(selector) {\n    if (this.isDisposed)\n      throw new Error(\"Collection is disposed\");\n    if (!selector)\n      throw new Error(\"Invalid selector\");\n    const items = this.getItems(selector);\n    items.forEach((item) => {\n      const index = this.memory().findIndex((document) => document === item);\n      if (index === -1)\n        throw new Error(\"Cannot resolve index for item\");\n      this.memory().splice(index, 1);\n      this.deleteFromIdIndex(item.id, index);\n      this.rebuildIndices();\n    });\n    items.forEach((item) => {\n      this.emit(\"removed\", item);\n    });\n    this.emit(\"removeMany\", selector);\n    this.executeInDebugMode((callstack) => this.emit(\"_debug.removeMany\", callstack, selector));\n    return items.length;\n  }\n};\n__publicField(_Collection, \"collections\", []);\n__publicField(_Collection, \"debugMode\", false);\n__publicField(_Collection, \"batchOperationInProgress\", false);\n__publicField(_Collection, \"fieldTracking\", false);\n__publicField(_Collection, \"onCreationCallbacks\", []);\n__publicField(_Collection, \"onDisposeCallbacks\", []);\n/**\n * Enables debug mode for all collections.\n */\n__publicField(_Collection, \"enableDebugMode\", () => {\n  _Collection.debugMode = true;\n  _Collection.collections.forEach((collection) => {\n    collection.setDebugMode(true);\n  });\n});\n/**\n * Enables field tracking for all collections.\n * @param enable - A boolean indicating whether to enable field tracking.\n */\n__publicField(_Collection, \"setFieldTracking\", (enable) => {\n  _Collection.fieldTracking = enable;\n  _Collection.collections.forEach((collection) => {\n    collection.setFieldTracking(enable);\n  });\n});\nlet Collection = _Collection;\nexport {\n  default2 as createIndex,\n  Collection as default\n};\n", "function createPersistenceAdapter(definition) {\n  return definition;\n}\nexport {\n  createPersistenceAdapter as default\n};\n", "import createPersistenceAdapter from \"./index8.mjs\";\nfunction createTemporaryFallbackExecutor(firstResolvingPromiseFunction, secondResolvingPromiseFunction, options) {\n  const cacheTimeout = options == null ? void 0 : options.cacheTimeout;\n  let isResolved = false;\n  let resolvedValue = null;\n  let timeout = null;\n  let secondaryPromise = null;\n  return (...args) => {\n    if (secondaryPromise == null) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      secondaryPromise = secondResolvingPromiseFunction(...args).then((result) => {\n        {\n          timeout = setTimeout(() => {\n            isResolved = false;\n            resolvedValue = null;\n            secondaryPromise = null;\n          }, cacheTimeout);\n        }\n        isResolved = true;\n        resolvedValue = result;\n        if (options == null ? void 0 : options.onResolve)\n          options.onResolve(resolvedValue);\n        return result;\n      });\n    } else if (isResolved) {\n      return secondaryPromise;\n    }\n    return firstResolvingPromiseFunction(...args);\n  };\n}\nfunction combinePersistenceAdapters(slowAdapter, fastAdapter) {\n  let handleChange = null;\n  const readExecutor = createTemporaryFallbackExecutor(() => fastAdapter.load(), () => slowAdapter.load(), {\n    cacheTimeout: 100,\n    onResolve: (result) => {\n      var _a, _b, _c;\n      if (handleChange)\n        void handleChange();\n      void fastAdapter.save(result.items || [], {\n        added: ((_a = result.changes) == null ? void 0 : _a.added) || [],\n        modified: ((_b = result.changes) == null ? void 0 : _b.modified) || [],\n        removed: ((_c = result.changes) == null ? void 0 : _c.removed) || []\n      });\n    }\n  });\n  return createPersistenceAdapter({\n    async register(onChange) {\n      handleChange = onChange;\n      await Promise.all([slowAdapter.register(onChange), fastAdapter.register(onChange)]);\n    },\n    async load() {\n      const promise = readExecutor();\n      return promise;\n    },\n    async save(items, changes) {\n      await Promise.all([\n        fastAdapter.save(items, changes),\n        slowAdapter.save(items, changes)\n      ]);\n    }\n  });\n}\nexport {\n  createTemporaryFallbackExecutor,\n  combinePersistenceAdapters as default\n};\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nimport Collection from \"./index3.mjs\";\nimport combinePersistenceAdapters from \"./index5.mjs\";\nimport createPersistenceAdapter from \"./index8.mjs\";\nimport createSignal from \"./index21.mjs\";\nfunction createReplicationAdapter(options) {\n  return createPersistenceAdapter({\n    async register(onChange) {\n      if (!options.registerRemoteChange)\n        return;\n      await options.registerRemoteChange(onChange);\n    },\n    load: () => options.pull(),\n    save: (items, changes) => {\n      if (!options.push)\n        throw new Error(\"Pushing is not configured for this collection. Try to pass a `push` function to the collection options.\");\n      return options.push(changes, items);\n    }\n  });\n}\nclass ReplicatedCollection extends Collection {\n  /**\n   * Creates a new instance of the `ReplicatedCollection` class.\n   * Sets up the replication adapter, combining it with an optional persistence adapter, and\n   * initializes signals for tracking remote pull and push operations.\n   * @param options - The configuration options for the replicated collection.\n   * @param options.pull - A function to fetch data from the remote source.\n   * @param options.push - An optional function to send changes and items to the remote source.\n   * @param options.registerRemoteChange - An optional function to register a listener for remote changes.\n   * @param options.persistence - An optional persistence adapter to combine with replication.\n   * @param options.reactivity - A reactivity adapter for observing changes in the collection.\n   * @param options.transform - A transformation function to apply to items when retrieving them.\n   * @param options.indices - An array of index providers for optimized querying.\n   * @param options.enableDebugMode - A boolean to enable or disable debug mode.\n   */\n  constructor(options) {\n    const replicationAdapter = createReplicationAdapter({\n      registerRemoteChange: options.registerRemoteChange,\n      pull: async () => {\n        this.isPullingRemoteSignal.set(true);\n        try {\n          return await options.pull();\n        } finally {\n          this.isPullingRemoteSignal.set(false);\n        }\n      },\n      push: options.push ? async (changes, items) => {\n        if (!options.push)\n          throw new Error(\"Pushing is not configured for this collection. Try to pass a `push` function to the collection options.\");\n        this.isPushingRemoteSignal.set(true);\n        try {\n          await options.push(changes, items);\n        } finally {\n          this.isPushingRemoteSignal.set(false);\n        }\n      } : void 0\n    });\n    const persistenceAdapter = (options == null ? void 0 : options.persistence) ? combinePersistenceAdapters(replicationAdapter, options.persistence) : replicationAdapter;\n    super({\n      ...options,\n      persistence: persistenceAdapter\n    });\n    __publicField(this, \"isPullingRemoteSignal\");\n    __publicField(this, \"isPushingRemoteSignal\");\n    this.isPullingRemoteSignal = createSignal(options.reactivity, false);\n    this.isPushingRemoteSignal = createSignal(options.reactivity, false);\n  }\n  /**\n   * Checks whether the collection is currently performing any loading operation,\n   * including pulling or pushing data from/to the remote source, or standard\n   * persistence adapter operations.\n   * ⚡️ this function is reactive!\n   * @returns A boolean indicating if the collection is currently loading or synchronizing.\n   */\n  isLoading() {\n    const isPullingRemote = this.isPullingRemoteSignal.get();\n    const isPushingRemote = this.isPushingRemoteSignal.get();\n    const isLoading = super.isLoading();\n    return isPullingRemote || isPushingRemote || isLoading;\n  }\n}\nexport {\n  createReplicationAdapter,\n  ReplicatedCollection as default\n};\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nimport ReplicatedCollection from \"./index23.mjs\";\nimport createSignal from \"./index21.mjs\";\nclass AutoFetchCollection extends ReplicatedCollection {\n  /**\n   * @param options {Object} - Options for the collection.\n   * @param options.fetchQueryItems {Function} - A function that fetches items from the server. It takes the selector as an argument and returns a promise that resolves to an object with an `items` property.\n   * @param options.purgeDelay {Number} - The delay in milliseconds before purging an item from the cache.\n   */\n  constructor(options) {\n    let triggerRemoteChange;\n    super({\n      ...options,\n      pull: () => Promise.resolve({\n        items: [...this.itemsCache.values()].reduce((memo, items) => {\n          const newItems = [...memo];\n          items.forEach((item) => {\n            const index = newItems.findIndex((i) => i.id === item.id);\n            if (index === -1) {\n              newItems.push(item);\n              return;\n            }\n            newItems[index] = this.mergeItems(newItems[index], item);\n          });\n          return newItems;\n        }, [])\n      }),\n      registerRemoteChange: async (onChange) => {\n        triggerRemoteChange = onChange;\n      }\n    });\n    __publicField(this, \"activeObservers\", /* @__PURE__ */ new Map());\n    __publicField(this, \"observerTimeouts\", /* @__PURE__ */ new Map());\n    __publicField(this, \"purgeDelay\");\n    __publicField(this, \"idQueryCache\", /* @__PURE__ */ new Map());\n    __publicField(this, \"itemsCache\", /* @__PURE__ */ new Map());\n    __publicField(this, \"fetchQueryItems\");\n    __publicField(this, \"triggerReload\", null);\n    __publicField(this, \"reactivityAdapter\", null);\n    __publicField(this, \"loadingSignals\", /* @__PURE__ */ new Map());\n    __publicField(this, \"isFetchingSignal\");\n    __publicField(this, \"mergeItems\");\n    this.mergeItems = options.mergeItems ?? ((itemA, itemB) => ({ ...itemA, ...itemB }));\n    this.purgeDelay = options.purgeDelay ?? 1e4;\n    this.isFetchingSignal = createSignal(options.reactivity, false);\n    if (!triggerRemoteChange)\n      throw new Error(\"No triggerRemoteChange method found. Looks like your persistence adapter was not registered\");\n    this.triggerReload = triggerRemoteChange;\n    this.reactivityAdapter = options.reactivity ?? null;\n    this.fetchQueryItems = options.fetchQueryItems;\n    this.on(\"observer.created\", (selector) => this.handleObserverCreation(selector ?? {}));\n    this.on(\"observer.disposed\", (selector) => setTimeout(() => this.handleObserverDisposal(selector ?? {}), 100));\n    if (options.registerRemoteChange) {\n      void options.registerRemoteChange(() => this.forceRefetch());\n    }\n  }\n  /**\n   * Registers a query manually that items should be fetched for it\n   * @param selector {Object} Selector of the query\n   */\n  registerQuery(selector) {\n    this.handleObserverCreation(selector);\n  }\n  /**\n   * Unregisters a query manually that items are not fetched anymore for it\n   * @param selector {Object} Selector of the query\n   */\n  unregisterQuery(selector) {\n    this.handleObserverDisposal(selector);\n  }\n  getKeyForSelector(selector) {\n    return JSON.stringify(selector);\n  }\n  async forceRefetch() {\n    return Promise.all([...this.activeObservers.values()].map(({ selector }) => this.fetchSelector(selector))).then(() => {\n    });\n  }\n  fetchSelector(selector) {\n    this.isFetchingSignal.set(true);\n    return this.fetchQueryItems(selector).then((response) => {\n      if (!response.items)\n        throw new Error(\"AutoFetchCollection currently only works with a full item response\");\n      this.itemsCache.set(this.getKeyForSelector(selector), response.items);\n      response.items.forEach((item) => {\n        const queries = this.idQueryCache.get(item.id) ?? [];\n        queries.push(selector);\n        this.idQueryCache.set(item.id, queries);\n      });\n      this.setLoading(selector, true);\n      this.once(\"persistence.received\", () => {\n        this.setLoading(selector, false);\n      });\n      if (!this.triggerReload)\n        throw new Error(\"No triggerReload method found. Looks like your persistence adapter was not registered\");\n      void this.triggerReload();\n    }).catch((error) => {\n      this.emit(\"persistence.error\", error);\n    }).finally(() => {\n      this.isFetchingSignal.set(false);\n    });\n  }\n  handleObserverCreation(selector) {\n    var _a;\n    const activeObservers = ((_a = this.activeObservers.get(this.getKeyForSelector(selector))) == null ? void 0 : _a.count) ?? 0;\n    this.activeObservers.set(this.getKeyForSelector(selector), {\n      selector,\n      count: activeObservers + 1\n    });\n    const timeout = this.observerTimeouts.get(this.getKeyForSelector(selector));\n    if (timeout)\n      clearTimeout(timeout);\n    if (activeObservers === 0)\n      void this.fetchSelector(selector);\n  }\n  handleObserverDisposal(selector) {\n    var _a;\n    const currentObservers = ((_a = this.activeObservers.get(this.getKeyForSelector(selector))) == null ? void 0 : _a.count) ?? 0;\n    const activeObservers = currentObservers - 1;\n    if (activeObservers > 0) {\n      this.activeObservers.set(this.getKeyForSelector(selector), {\n        selector,\n        count: activeObservers\n      });\n      return;\n    }\n    const timeout = this.observerTimeouts.get(this.getKeyForSelector(selector));\n    if (timeout)\n      clearTimeout(timeout);\n    const removeObserver = () => {\n      this.activeObservers.delete(this.getKeyForSelector(selector));\n      this.itemsCache.delete(this.getKeyForSelector(selector));\n      if (!this.triggerReload)\n        throw new Error(\"No triggerReload method found. Looks like your persistence adapter was not registered\");\n      void this.triggerReload();\n    };\n    if (this.purgeDelay === 0) {\n      removeObserver();\n      return;\n    }\n    this.observerTimeouts.set(this.getKeyForSelector(selector), setTimeout(removeObserver, this.purgeDelay));\n  }\n  ensureSignal(selector) {\n    if (!this.reactivityAdapter)\n      throw new Error(\"No reactivity adapter found\");\n    if (!this.loadingSignals.has(this.getKeyForSelector(selector))) {\n      this.loadingSignals.set(this.getKeyForSelector(selector), createSignal(this.reactivityAdapter, false));\n    }\n    return this.loadingSignals.get(this.getKeyForSelector(selector));\n  }\n  setLoading(selector, value) {\n    const signal = this.ensureSignal(selector);\n    signal.set(value);\n  }\n  /**\n   * Indicates wether a query is currently been loaded\n   * ⚡️ this function is reactive!\n   * @param selector {Object} Selector of the query\n   * @returns The loading state\n   */\n  isLoading(selector) {\n    const isPushing = this.isPushing();\n    if (!selector) {\n      return this.isFetchingSignal.get() || isPushing;\n    }\n    const signal = this.ensureSignal(selector);\n    return signal.get() || isPushing;\n  }\n}\nexport {\n  AutoFetchCollection as default\n};\n", "function createMemoryAdapter(definition) {\n  return definition;\n}\nexport {\n  createMemoryAdapter as default\n};\n", "function createReactivityAdapter(definition) {\n  return definition;\n}\nexport {\n  createReactivityAdapter as default\n};\n"],
  "mappings": "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",
  "names": ["defaultComparer", "set", "__defProp", "__defNormalProp", "__publicField", "sort", "__defProp", "__defNormalProp", "__publicField", "isEqual", "$eq", "$gt", "$gte", "$lt", "$lte", "$ne", "_options", "expressionKeys", "_options", "_options", "_operators", "_buffer", "Cursor", "_options", "Cursor", "isEqual", "_options", "compare", "match", "$eq", "$gt", "$gte", "$lt", "$lte", "$ne", "$elemMatch", "$slice", "$elemMatch", "$slice", "$all", "$and", "$elemMatch", "$eq", "$gt", "$gte", "$in", "$lt", "$lte", "$mod", "$ne", "$nin", "$not", "$or", "$regex", "$size", "$type", "$all", "$elemMatch", "$size", "_options", "_options", "_options", "_options", "$eq", "$gt", "$gte", "$in", "$lt", "$lte", "$ne", "$nin", "_options", "$type", "$mod", "$regex", "$and", "$or", "$or", "$not", "$push", "$push", "isEqual", "isEqual", "clone", "isEqual", "isInReactiveScope", "intersection", "intersection", "$and", "$or", "set", "__defProp", "__defNormalProp", "__publicField", "_Collection", "resolve", "__defProp", "__defNormalProp", "__publicField", "__defProp", "__defNormalProp", "__publicField"]
}

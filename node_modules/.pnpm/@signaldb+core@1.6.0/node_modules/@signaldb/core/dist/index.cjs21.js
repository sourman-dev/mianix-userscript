"use strict";
function createSignal(reactivityAdapter, initialValue, isEqual = Object.is) {
  let value = initialValue;
  const dependency = reactivityAdapter == null ? void 0 : reactivityAdapter.create();
  const isInReactiveScope = () => {
    if (!(reactivityAdapter == null ? void 0 : reactivityAdapter.isInScope))
      return true;
    return reactivityAdapter.isInScope();
  };
  const signal = {
    get() {
      if (dependency && isInReactiveScope())
        dependency.depend();
      return value;
    },
    set(newValue) {
      if (isEqual(value, newValue))
        return;
      value = newValue;
      if (dependency)
        dependency.notify();
    }
  };
  return signal;
}
module.exports = createSignal;

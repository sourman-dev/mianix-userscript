import { type Ref } from 'vue';
import type { ModalPosition, ModalSize } from './types';
interface ModalProps {
    notEscapable?: boolean;
    persistent?: boolean;
    size?: ModalSize;
    position?: ModalPosition;
    focusTrap?: boolean;
}
declare const modalSizeClasses: Record<ModalSize, string>;
declare const modalPositionClasses: Record<ModalPosition, string>;
declare function closeModal(): void;
declare function clickOutside(): void;
declare function closeWithEsc(): void;
declare const modalRef: Ref<HTMLElement | null>;
declare const __VLS_ctx: InstanceType<__VLS_PickNotAny<typeof __VLS_self, new () => {}>>;
declare var __VLS_1: {}, __VLS_3: {}, __VLS_5: {}, __VLS_7: {};
type __VLS_Slots = __VLS_PrettifyGlobal<__VLS_OmitStringIndex<typeof __VLS_ctx.$slots> & {
    header?: (props: typeof __VLS_1) => any;
} & {
    'close-icon'?: (props: typeof __VLS_3) => any;
} & {
    body?: (props: typeof __VLS_5) => any;
} & {
    footer?: (props: typeof __VLS_7) => any;
}>;
declare const __VLS_self: import("vue").DefineComponent<ModalProps, {
    modalSizeClasses: typeof modalSizeClasses;
    modalPositionClasses: typeof modalPositionClasses;
    closeModal: typeof closeModal;
    clickOutside: typeof clickOutside;
    closeWithEsc: typeof closeWithEsc;
    modalRef: typeof modalRef;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    close: (...args: any[]) => void;
    "click:outside": (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<ModalProps> & Readonly<{
    onClose?: ((...args: any[]) => any) | undefined;
    "onClick:outside"?: ((...args: any[]) => any) | undefined;
}>, {
    persistent: boolean;
    size: ModalSize;
    notEscapable: boolean;
    position: ModalPosition;
    focusTrap: boolean;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
declare const __VLS_component: import("vue").DefineComponent<ModalProps, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    close: (...args: any[]) => void;
    "click:outside": (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<ModalProps> & Readonly<{
    onClose?: ((...args: any[]) => any) | undefined;
    "onClick:outside"?: ((...args: any[]) => any) | undefined;
}>, {
    persistent: boolean;
    size: ModalSize;
    notEscapable: boolean;
    position: ModalPosition;
    focusTrap: boolean;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
export default _default;
type __VLS_WithSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

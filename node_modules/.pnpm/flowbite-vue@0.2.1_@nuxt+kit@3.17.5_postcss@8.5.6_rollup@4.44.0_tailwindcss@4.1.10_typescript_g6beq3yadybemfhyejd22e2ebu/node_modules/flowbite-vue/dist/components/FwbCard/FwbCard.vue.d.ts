import { type PropType } from 'vue';
import type { CardsVariant } from './types';
declare const cardClasses: import("vue").Ref<string, string>, horizontalImageClasses: import("vue").Ref<string, string>;
declare const wrapperType: import("vue").ComputedRef<"div" | "a">;
declare const __VLS_ctx: InstanceType<__VLS_PickNotAny<typeof __VLS_self, new () => {}>>;
declare var __VLS_6: {};
type __VLS_Slots = __VLS_PrettifyGlobal<__VLS_OmitStringIndex<typeof __VLS_ctx.$slots> & {
    default?: (props: typeof __VLS_6) => any;
}>;
declare const __VLS_self: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    href: {
        type: StringConstructor;
        default: string;
    };
    imgAlt: {
        type: StringConstructor;
        default: string;
    };
    imgSrc: {
        type: StringConstructor;
        default: string;
    };
    variant: {
        type: PropType<CardsVariant>;
        default: string;
    };
}>, {
    cardClasses: typeof cardClasses;
    horizontalImageClasses: typeof horizontalImageClasses;
    wrapperType: typeof wrapperType;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    href: {
        type: StringConstructor;
        default: string;
    };
    imgAlt: {
        type: StringConstructor;
        default: string;
    };
    imgSrc: {
        type: StringConstructor;
        default: string;
    };
    variant: {
        type: PropType<CardsVariant>;
        default: string;
    };
}>> & Readonly<{}>, {
    href: string;
    imgAlt: string;
    imgSrc: string;
    variant: CardsVariant;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
declare const __VLS_component: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    href: {
        type: StringConstructor;
        default: string;
    };
    imgAlt: {
        type: StringConstructor;
        default: string;
    };
    imgSrc: {
        type: StringConstructor;
        default: string;
    };
    variant: {
        type: PropType<CardsVariant>;
        default: string;
    };
}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    href: {
        type: StringConstructor;
        default: string;
    };
    imgAlt: {
        type: StringConstructor;
        default: string;
    };
    imgSrc: {
        type: StringConstructor;
        default: string;
    };
    variant: {
        type: PropType<CardsVariant>;
        default: string;
    };
}>> & Readonly<{}>, {
    href: string;
    imgAlt: string;
    imgSrc: string;
    variant: CardsVariant;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
export default _default;
type __VLS_WithSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

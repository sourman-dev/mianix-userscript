import { keyPassThroughProxy } from "./utils.js";
const RelationsBuilderSentinel = Symbol();
export class Relations {
    from;
    to;
    relationsMap;
    constructor(key, from, to) {
        this.from = from;
        this.to = to;
        if (key !== RelationsBuilderSentinel)
            throw new Error("Cannot call RelationsBuilder directly - use Relations.create()");
    }
    static create(from, to) {
        return new Relations(RelationsBuilderSentinel, from, to);
    }
    as(cfg) {
        this.relationsMap = Object.entries(cfg).reduce((acc, [key, value]) => {
            acc[key] = value(keyPassThroughProxy, keyPassThroughProxy);
            return acc;
        }, {});
        return this;
    }
}

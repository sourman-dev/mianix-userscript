export { idb };
export { Collection } from "./collection.js";
export { Relations } from "./relations.js";
import { AsyncIDB } from "./idb.js";
/**
 * Creates a new AsyncIDB instance
 * @template {CollectionSchema} T
 * @template {RelationsSchema} R
 * @param {string} name
 * @param {AsyncIDBConfig<T, R>} config
 * @returns {AsyncIDBInstance<T, R>}
 */
function idb(name, config) {
    if (isNaN(config.version) || Math.floor(config.version) !== config.version)
        throw new Error("[async-idb-orm]: Version must be an integer with no decimal places");
    const db = new AsyncIDB(name, config);
    const getInstance = () => {
        return new Promise((res) => db.getInstance(res));
    };
    return {
        collections: db.stores,
        transaction: db.transaction.bind(db),
        getInstance,
    };
}

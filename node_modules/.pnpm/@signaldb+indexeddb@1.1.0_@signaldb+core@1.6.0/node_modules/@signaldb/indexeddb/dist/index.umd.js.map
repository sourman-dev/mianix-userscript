{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { createPersistenceAdapter } from '@signaldb/core';\n/**\n * Creates a persistence adapter for managing a SignalDB collection using IndexedDB.\n * This adapter reads and writes data to an IndexedDB object store, with customizable serialization and deserialization.\n * @template T - The type of the items in the collection.\n * @template I - The type of the unique identifier for the items.\n * @param name - A unique name for the collection, used as the database name.\n * @param options - Optional configuration for the adapter.\n * @param options.prefix - A prefix to be added to the database name (default: 'signaldb-').\n * @returns A SignalDB persistence adapter for managing data in IndexedDB.\n */\nexport default function createIndexedDBAdapter(name, options) {\n    const { prefix = 'signaldb-' } = options || {};\n    const databaseName = `${prefix}${name}`;\n    const storeName = 'items';\n    /**\n     * Opens the IndexedDB database and creates the object store if it doesn't exist.\n     * @returns A promise that resolves with the opened database.\n     */\n    function openDatabase() {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(databaseName, 1);\n            request.addEventListener('upgradeneeded', () => {\n                const database = request.result;\n                if (!database.objectStoreNames.contains(storeName)) {\n                    database.createObjectStore(storeName, { keyPath: 'id' });\n                }\n            });\n            request.addEventListener('success', () => resolve(request.result));\n            request.addEventListener('error', () => reject(new Error(request.error?.message || 'Database error')));\n        });\n    }\n    /**\n     * Retrieves all items from the IndexedDB object store.\n     * @returns A promise that resolves with an array of items.\n     */\n    async function getAllItems() {\n        const database = await openDatabase();\n        return new Promise((resolve, reject) => {\n            const transaction = database.transaction(storeName, 'readonly');\n            const store = transaction.objectStore(storeName);\n            const request = store.getAll();\n            request.addEventListener('success', () => resolve(request.result));\n            request.addEventListener('error', () => reject(new Error(request.error?.message || 'Error fetching items')));\n        });\n    }\n    return createPersistenceAdapter({\n        async load() {\n            const items = await getAllItems();\n            return { items };\n        },\n        async save(items, { added, modified, removed }) {\n            const database = await openDatabase();\n            const transaction = database.transaction(storeName, 'readwrite');\n            const store = transaction.objectStore(storeName);\n            added.forEach(item => store.add(item));\n            modified.forEach(item => store.put(item));\n            removed.forEach(item => store.delete(item.id));\n            return new Promise((resolve, reject) => {\n                transaction.addEventListener('complete', () => resolve());\n                transaction.addEventListener('error', () => reject(new Error(transaction.error?.message || 'Transaction error')));\n            });\n        },\n        async register() {\n            return;\n        },\n    });\n}\n"],"names":["createIndexedDBAdapter","name","options","prefix","databaseName","storeName","openDatabase","resolve","reject","request","database","_a","getAllItems","createPersistenceAdapter","items","added","modified","removed","transaction","store","item"],"mappings":"4QAWwB,SAAAA,EAAuBC,EAAMC,EAAS,CAC1D,KAAM,CAAE,OAAAC,EAAS,WAAY,EAAID,GAAW,CAAC,EACvCE,EAAe,GAAGD,CAAM,GAAGF,CAAI,GAC/BI,EAAY,QAKlB,SAASC,GAAe,CACpB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,MAAMC,EAAU,UAAU,KAAKL,EAAc,CAAC,EACtCK,EAAA,iBAAiB,gBAAiB,IAAM,CAC5C,MAAMC,EAAWD,EAAQ,OACpBC,EAAS,iBAAiB,SAASL,CAAS,GAC7CK,EAAS,kBAAkBL,EAAW,CAAE,QAAS,KAAM,CAC3D,CACH,EACDI,EAAQ,iBAAiB,UAAW,IAAMF,EAAQE,EAAQ,MAAM,CAAC,EACzDA,EAAA,iBAAiB,QAAS,IAAA,OAAM,OAAAD,EAAO,IAAI,QAAMG,EAAAF,EAAQ,QAAR,YAAAE,EAAe,UAAW,gBAAgB,CAAC,EAAC,CAAA,CACxG,CAAA,CAML,eAAeC,GAAc,CACnB,MAAAF,EAAW,MAAMJ,EAAa,EACpC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAG9B,MAAAC,EAFcC,EAAS,YAAYL,EAAW,UAAU,EACpC,YAAYA,CAAS,EACzB,OAAO,EAC7BI,EAAQ,iBAAiB,UAAW,IAAMF,EAAQE,EAAQ,MAAM,CAAC,EACzDA,EAAA,iBAAiB,QAAS,IAAA,OAAM,OAAAD,EAAO,IAAI,QAAMG,EAAAF,EAAQ,QAAR,YAAAE,EAAe,UAAW,sBAAsB,CAAC,EAAC,CAAA,CAC9G,CAAA,CAEL,OAAOE,2BAAyB,CAC5B,MAAM,MAAO,CAET,MAAO,CAAE,MADK,MAAMD,EAAY,CACjB,CACnB,EACA,MAAM,KAAKE,EAAO,CAAE,MAAAC,EAAO,SAAAC,EAAU,QAAAC,GAAW,CAE5C,MAAMC,GADW,MAAMZ,EAAa,GACP,YAAYD,EAAW,WAAW,EACzDc,EAAQD,EAAY,YAAYb,CAAS,EAC/C,OAAAU,EAAM,QAAQK,GAAQD,EAAM,IAAIC,CAAI,CAAC,EACrCJ,EAAS,QAAQI,GAAQD,EAAM,IAAIC,CAAI,CAAC,EACxCH,EAAQ,QAAgBG,GAAAD,EAAM,OAAOC,EAAK,EAAE,CAAC,EACtC,IAAI,QAAQ,CAACb,EAASC,IAAW,CACpCU,EAAY,iBAAiB,WAAY,IAAMX,EAAA,CAAS,EAC5CW,EAAA,iBAAiB,QAAS,IAAA,OAAM,OAAAV,EAAO,IAAI,QAAMG,EAAAO,EAAY,QAAZ,YAAAP,EAAmB,UAAW,mBAAmB,CAAC,EAAC,CAAA,CACnH,CACL,EACA,MAAM,UAAW,CACb,CACJ,CACH,CACL"}
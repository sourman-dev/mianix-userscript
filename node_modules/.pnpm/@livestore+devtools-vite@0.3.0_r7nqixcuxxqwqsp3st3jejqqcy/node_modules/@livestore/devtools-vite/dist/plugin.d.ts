import { Schema } from '@livestore/utils/effect';
import type { Plugin } from 'vite';
export declare const PluginOptions: Schema.Struct<{
    /**
     * The path to the schema file. The schema file needs to export the schema as `export const schema`.
     * Path needs to be relative to the Vite `root`.
     *
     * Example:
     * ```ts
     * import { devtoolsVitePlugin } from '@livestore/devtools-vite'
     *
     * devtoolsVitePlugin({
     *   schemaPath: './src/db/schema/index.ts'
     *   // ...
     * })
     *
     * If your app uses multiple schemas, you can provide an array of schema paths.
     * ```ts
     * devtoolsVitePlugin({
     *   schemaPath: ['./src/db/schema/index.ts', './src/db/schema2/index.ts']
     *   // ...
     * })
     * ```
     */
    schemaPath: Schema.Union<[typeof Schema.String, Schema.Array$<typeof Schema.String>]>;
    /**
     * Where to serve the devtools UI.
     *
     * @default '/_livestore'
     */
    mode: Schema.optional<Schema.Union<[Schema.TaggedStruct<"node", {
        url: typeof Schema.String;
    }>, Schema.TaggedStruct<"web", {}>, Schema.TaggedStruct<"browser-extension", {}>]>>;
    path: Schema.optional<typeof Schema.String>;
    experimental: Schema.optional<Schema.Struct<{
        continueOnError: Schema.optional<typeof Schema.Boolean>;
    }>>;
}>;
export type PluginOptions = typeof PluginOptions.Type;
export declare const livestoreDevtoolsPlugin: (options: PluginOptions) => Plugin;
//# sourceMappingURL=plugin.d.ts.map
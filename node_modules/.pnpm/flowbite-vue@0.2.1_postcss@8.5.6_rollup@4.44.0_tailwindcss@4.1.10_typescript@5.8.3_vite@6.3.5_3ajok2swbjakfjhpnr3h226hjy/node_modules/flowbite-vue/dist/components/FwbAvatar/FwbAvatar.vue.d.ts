import { type PropType } from 'vue';
import type { AvatarSize, AvatarStatus, AvatarStatusPosition } from './types';
declare const imageError: import("vue").Ref<boolean, boolean>;
declare function setImageError(): void;
declare const hasPlaceholder: import("vue").ComputedRef<import("vue").Slot<any> | undefined>;
declare const avatarClasses: import("vue").Ref<string, string>, avatarDotClasses: import("vue").Ref<string, string>, avatarPlaceholderClasses: import("vue").Ref<string, string>, avatarPlaceholderIconClasses: import("vue").Ref<string, string>, avatarPlaceholderInitialsClasses: import("vue").Ref<string, string>, avatarPlaceholderWrapperClasses: import("vue").Ref<string, string>;
declare const __VLS_ctx: InstanceType<__VLS_PickNotAny<typeof __VLS_self, new () => {}>>;
declare var __VLS_1: {};
type __VLS_Slots = __VLS_PrettifyGlobal<__VLS_OmitStringIndex<typeof __VLS_ctx.$slots> & {
    placeholder?: (props: typeof __VLS_1) => any;
}>;
declare const __VLS_self: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    img: {
        type: StringConstructor;
        default: string;
    };
    rounded: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<AvatarSize>;
        default: string;
    };
    stacked: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: PropType<AvatarStatus>;
        default: null;
    };
    statusPosition: {
        type: PropType<AvatarStatusPosition>;
        default: string;
    };
    initials: {
        type: StringConstructor;
        default: null;
    };
}>, {
    imageError: typeof imageError;
    setImageError: typeof setImageError;
    hasPlaceholder: typeof hasPlaceholder;
    avatarClasses: typeof avatarClasses;
    avatarDotClasses: typeof avatarDotClasses;
    avatarPlaceholderClasses: typeof avatarPlaceholderClasses;
    avatarPlaceholderIconClasses: typeof avatarPlaceholderIconClasses;
    avatarPlaceholderInitialsClasses: typeof avatarPlaceholderInitialsClasses;
    avatarPlaceholderWrapperClasses: typeof avatarPlaceholderWrapperClasses;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    img: {
        type: StringConstructor;
        default: string;
    };
    rounded: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<AvatarSize>;
        default: string;
    };
    stacked: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: PropType<AvatarStatus>;
        default: null;
    };
    statusPosition: {
        type: PropType<AvatarStatusPosition>;
        default: string;
    };
    initials: {
        type: StringConstructor;
        default: null;
    };
}>> & Readonly<{}>, {
    img: string;
    rounded: boolean;
    alt: string;
    bordered: boolean;
    size: AvatarSize;
    stacked: boolean;
    status: AvatarStatus;
    statusPosition: AvatarStatusPosition;
    initials: string;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
declare const __VLS_component: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    img: {
        type: StringConstructor;
        default: string;
    };
    rounded: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<AvatarSize>;
        default: string;
    };
    stacked: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: PropType<AvatarStatus>;
        default: null;
    };
    statusPosition: {
        type: PropType<AvatarStatusPosition>;
        default: string;
    };
    initials: {
        type: StringConstructor;
        default: null;
    };
}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        default: string;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    img: {
        type: StringConstructor;
        default: string;
    };
    rounded: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: PropType<AvatarSize>;
        default: string;
    };
    stacked: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: PropType<AvatarStatus>;
        default: null;
    };
    statusPosition: {
        type: PropType<AvatarStatusPosition>;
        default: string;
    };
    initials: {
        type: StringConstructor;
        default: null;
    };
}>> & Readonly<{}>, {
    img: string;
    rounded: boolean;
    alt: string;
    bordered: boolean;
    size: AvatarSize;
    stacked: boolean;
    status: AvatarStatus;
    statusPosition: AvatarStatusPosition;
    initials: string;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
export default _default;
type __VLS_WithSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
